Цель: Сгенерировать рабочий tokens.json локально и "закинуть" его на работающий сервер.
✅ Инструкция: Финальная инициализация токена
Шаг 1: Подготовка локальной среды (твой компьютер)
Открой проект в редакторе кода.
Удали старый токен: В папке backend удали файл tokens.json, если он там есть.
Настрой .env для локальной машины:
Открой файл backend/.env.
Убедись, что в строке AMOCRM_REDIRECT_URI прописан локальный адрес:
AMOCRM_REDIRECT_URI=http://localhost:3001/api/amocrm/callback
Шаг 2: Получение auth_code для локальной машины
Открой AmoCRM в браузере.
Перейди в Настройки -> Интеграции -> Созданные вами и открой нашу интеграцию.
На вкладке "Ключи и доступы" в поле "Ссылка для перенаправления" временно впиши наш локальный адрес:
http://localhost:3001/api/amocrm/callback
Сохрани изменения.
Сгенерируй НОВЫЙ код авторизации.
Скопируй его и вставь в AMOCRM_AUTH_CODE в твоем локальном .env файле. Сохрани .env.
Шаг 3: Генерация tokens.json локально
Открой терминал на своем компьютере.
Перейди в папку backend: cd backend.
Запусти бэкенд локально:
code
Bash
npm start
Сразу же открой в браузере ссылку:
http://localhost:3001/api/amocrm/init
Результат: Ты увидишь сообщение об успехе. В папке backend на твоем компьютере появится новый, рабочий файл tokens.json.
Останови локальный бэкенд (Ctrl + C в терминале).
Шаг 4: Копирование токена на сервер
Открой tokens.json, который только что создался на твоем компьютере, и скопируй всё его содержимое.
Подключись к своему VPS на Timeweb по SSH.
Перейди в папку с бэкендом на сервере:
code
Bash
cd /путь/к/farolero-loyalty-app/backend
Открой (или создай) tokens.json на сервере с помощью nano:
code
Bash
nano tokens.json
Вставь туда скопированное содержимое.
Сохрани файл (Ctrl + X, Y, Enter).
Шаг 5: Финальная настройка и перезапуск
Верни redirect_uri в AmoCRM:
Вернись в настройки интеграции в AmoCRM.
В поле "Ссылка для перенаправления" верни публичный адрес твоего сервера:
https://api.farolero.твой-домен.ru/api/amocrm/callback
Сохрани.
Перезапусти Docker на сервере, чтобы он "увидел" новый tokens.json:
code
Bash
# Находясь в папке с docker-compose.yml
docker-compose restart backend
Готово!
Теперь твой бэкенд на сервере имеет рабочий, долгоживущий refresh_token и будет автоматически обновлять доступ, не требуя больше нашего вмешательства. Приложение должно работать стабильно.