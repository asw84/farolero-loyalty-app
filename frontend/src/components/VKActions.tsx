import { useState } from 'react';
import axios from 'axios';

interface VKActionsProps {
  vkId?: number;
  contactId?: number;
}

export function VKActions({ vkId }: VKActionsProps) {
  const [loading, setLoading] = useState<string | null>(null);
  const [result, setResult] = useState<string | null>(null);

  // ID –≥—Ä—É–ø–ø—ã VK (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –¥–ª—è –ø–æ—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞)
  const groupId = Number(import.meta.env.VITE_VK_GROUP_ID || '227733445');
  const ownerId = -groupId; // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ID –¥–ª—è –ø–æ—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
  
  // ID –ø–æ—Å—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
  const postId = 123;

  const verify = async (action: 'subscribe' | 'like' | 'comment' | 'repost') => {
    if (!vkId) {
      setResult('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ VK –∞–∫–∫–∞—É–Ω—Ç');
      return;
    }

    setLoading(action);
    setResult(null);

    try {
      const API_BASE_URL = import.meta.env.VITE_API_URL || 'https://api.5425685-au70735.twc1.net';
      const response = await axios.post(`${API_BASE_URL}/api/social/vk/verify`, {
        action,
        target: { ownerId, postId }
        // user –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞—é—Ç—Å—è –∏–∑ req.user —á–µ—Ä–µ–∑ middleware
      });

      if (response.data.ok) {
        setResult(`‚úÖ ${response.data.message}`);
      } else {
        setResult(`‚ùå ${response.data.message}`);
      }
    } catch (error: any) {
      console.error('Verification error:', error);
      setResult(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.data?.error || error.message}`);
    } finally {
      setLoading(null);
    }
  };

  if (!vkId) {
    return (
      <div style={{ padding: '20px', textAlign: 'center', color: '#666' }}>
        –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ VK –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
      </div>
    );
  }

  return (
    <div style={{ padding: '20px' }}>
      <h3 style={{ marginBottom: '20px', color: '#333' }}>
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ VK —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
      </h3>
      
      <div style={{ marginBottom: '20px', fontSize: '14px', color: '#666' }}>
        <p>VK ID: {vkId}</p>
        <p>–ì—Ä—É–ø–ø–∞: {groupId}</p>
      </div>

      <div style={{ display: 'grid', gap: '10px', maxWidth: '300px' }}>
        <button 
          onClick={() => verify('subscribe')}
          disabled={loading === 'subscribe'}
          style={{
            padding: '12px',
            backgroundColor: '#0077FF',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: loading === 'subscribe' ? 'not-allowed' : 'pointer',
            opacity: loading === 'subscribe' ? 0.7 : 1
          }}
        >
          {loading === 'subscribe' ? '–ü—Ä–æ–≤–µ—Ä—è—é...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (+20 –±–∞–ª–ª–æ–≤)'}
        </button>

        <button 
          onClick={() => verify('like')}
          disabled={loading === 'like'}
          style={{
            padding: '12px',
            backgroundColor: '#4CAF50',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: loading === 'like' ? 'not-allowed' : 'pointer',
            opacity: loading === 'like' ? 0.7 : 1
          }}
        >
          {loading === 'like' ? '–ü—Ä–æ–≤–µ—Ä—è—é...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∞–π–∫ (+2 –±–∞–ª–ª–∞)'}
        </button>

        <button 
          onClick={() => verify('comment')}
          disabled={loading === 'comment'}
          style={{
            padding: '12px',
            backgroundColor: '#FF9800',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: loading === 'comment' ? 'not-allowed' : 'pointer',
            opacity: loading === 'comment' ? 0.7 : 1
          }}
        >
          {loading === 'comment' ? '–ü—Ä–æ–≤–µ—Ä—è—é...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (+5 –±–∞–ª–ª–æ–≤)'}
        </button>

        <button 
          onClick={() => verify('repost')}
          disabled={loading === 'repost'}
          style={{
            padding: '12px',
            backgroundColor: '#9C27B0',
            color: 'white',
            border: 'none',
            borderRadius: '8px',
            cursor: loading === 'repost' ? 'not-allowed' : 'pointer',
            opacity: loading === 'repost' ? 0.7 : 1
          }}
        >
          {loading === 'repost' ? '–ü—Ä–æ–≤–µ—Ä—è—é...' : '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–ø–æ—Å—Ç (+10 –±–∞–ª–ª–æ–≤)'}
        </button>
      </div>

      {result && (
        <div style={{ 
          marginTop: '20px', 
          padding: '15px', 
          backgroundColor: result.includes('‚úÖ') ? '#e8f5e8' : '#ffeaea',
          borderRadius: '8px',
          border: `1px solid ${result.includes('‚úÖ') ? '#4CAF50' : '#f44336'}`
        }}>
          {result}
        </div>
      )}

      <div style={{ marginTop: '20px', fontSize: '12px', color: '#999' }}>
        <p>üí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ VK —Å–æ–æ–±—â–µ—Å—Ç–≤–µ</p>
        <p>üìù ID –ø–æ—Å—Ç–∞: {postId} (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)</p>
      </div>
    </div>
  );
}
