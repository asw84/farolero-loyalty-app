import { BridgeMessage } from "../../core/bridge";
import { WidgetParams } from "../../core/widget";
import { CommunitySubscriptionEvents, CommunitySubscriptionInternalEvents } from './events';
export interface CommunitySubscriptionParams extends Omit<WidgetParams, 'container'> {
    /**
     * ID группы, на которую надо подписаться
     */
    groupId: number;
    /**
     * Access Token пользователя, который получен в результате авторизации с доступом groups
     */
    accessToken: string;
}
export declare enum CommunitySubscriptionErrorCode {
    /**
     * Пользователь не имеет аккаунта ВКонтакте
     */
    IsServiceAccount = 200,
    /**
     * Ошибка при получении данных группы
     */
    GroupNotFound = 201,
    /**
     * Группа закрыта
     */
    GroupClosed = 202,
    /**
     * Пользователь уже подписан на группу
     */
    AlreadyMember = 203,
    /**
     * Access Token был получен без scope 'groups'
     */
    ScopeMissing = 204,
    /**
     * Неизвестная ошибка при выполнении запроса
     */
    UnknownError = 205,
    /**
     * Неправильные параметры в запросе
     */
    BadRequest = 206,
    /**
     * Достигнут лимит показа окна подписки
     */
    RemoteLimitReached = 207
}
export type CommunitySubscriptionErrorText = Record<CommunitySubscriptionErrorCode, string>;
export interface CommunitySubscriptionError {
    code?: CommunitySubscriptionErrorCode;
    error?: CommunitySubscriptionErrorText;
    error_data?: any;
}
export type CommunitySubscriptionBridgeMessage = BridgeMessage<CommunitySubscriptionEvents | CommunitySubscriptionInternalEvents, CommunitySubscriptionError>;
export type LimitDisplayLocalStorageObjType = Date[];
