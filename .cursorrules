# üéØ Cursor Rules - Farolero Loyalty App

## üìã –û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

### –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
1. **–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π** - AmoCRM, VK, Instagram, Qtickets
2. **–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞** - –∫–∞–∂–¥—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º
3. **–ß–∏—Å—Ç–æ—Ç–∞ –∫–æ–¥–∞** - —á–∏—Ç–∞–µ–º–æ—Å—Ç—å, —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å, –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
4. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤** - —Ç—Ä–æ–π–Ω–∞—è –∑–∞—â–∏—Ç–∞ (—Ñ–∞–π–ª + env + –ë–î)
5. **Production-ready** - –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏

### –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
- **–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å**: 85% (—Å–æ–≥–ª–∞—Å–Ω–æ INTEGRATIONS_STATUS_REPORT.md)
- **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏**: VK_CLIENT_SECRET, AmoCRM —Ç–æ–∫–µ–Ω—ã, Instagram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: React 19 + Node.js + Express + SQLite + Docker

---

## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞

### –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
```
backend/
‚îú‚îÄ‚îÄ controllers/     # API endpoints (—Ç–æ–Ω–∫–∏–π —Å–ª–æ–π)
‚îú‚îÄ‚îÄ services/       # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ (–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏)
‚îú‚îÄ‚îÄ models/         # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ middleware/     # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
‚îú‚îÄ‚îÄ utils/          # –£—Ç–∏–ª–∏—Ç—ã –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
‚îú‚îÄ‚îÄ integrations/   # –í–Ω–µ—à–Ω–∏–µ API (–∫–∞–∂–¥—ã–π –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–∞–ø–∫–µ)
‚îÇ   ‚îú‚îÄ‚îÄ amocrm/
‚îÇ   ‚îú‚îÄ‚îÄ vk/
‚îÇ   ‚îú‚îÄ‚îÄ instagram/
‚îÇ   ‚îî‚îÄ‚îÄ qtickets/
‚îî‚îÄ‚îÄ tests/          # –¢–µ—Å—Ç—ã
```

### –ü—Ä–∏–Ω—Ü–∏–ø—ã –º–æ–¥—É–ª—å–Ω–æ—Å—Ç–∏
- **–ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å** –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
- **–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏** —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ dependency injection
- **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã** –¥–ª—è –≤—Å–µ—Ö –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
- **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è** —á–µ—Ä–µ–∑ environment variables
- **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ** —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö

---

## üßπ –ü—Ä–∞–≤–∏–ª–∞ —á–∏—Å—Ç–æ—Ç—ã –∫–æ–¥–∞

### JavaScript/TypeScript —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
```javascript
// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - —á–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
const calculateLoyaltyStatus = (points) => {
  if (points >= 3000) return 'platinum';
  if (points >= 1500) return 'gold';
  if (points >= 500) return 'silver';
  return 'bronze';
};

// ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - async/await –≤–º–µ—Å—Ç–æ callbacks
const createUser = async (userData) => {
  try {
    const user = await userService.create(userData);
    await amocrmService.syncUser(user);
    return user;
  } catch (error) {
    logger.error('User creation failed', { error, userData });
    throw error;
  }
};

// ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - —Å–º–µ—à–∏–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏
const createUserAndSendEmail = async (userData) => {
  // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + –æ—Ç–ø—Ä–∞–≤–∫–∞ email –≤ –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
};
```

### –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ
- **–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ**: camelCase, –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞
- **–§—É–Ω–∫—Ü–∏–∏**: –≥–ª–∞–≥–æ–ª—ã (getUserProfile, calculatePoints)
- **–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã**: UPPER_SNAKE_CASE
- **–ö–ª–∞—Å—Å—ã**: PascalCase
- **–§–∞–π–ª—ã**: kebab-case

### –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```javascript
/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç RFM —Å–µ–≥–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Promise<RFMSegment>} - –û–±—ä–µ–∫—Ç —Å R, F, M –º–µ—Ç—Ä–∏–∫–∞–º–∏
 */
const calculateRFMSegment = async (userId) => {
  // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è...
};
```

---

## üìä –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ tasks.md

### –ü–æ—Å–ª–µ –ö–ê–ñ–î–û–ô –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏
```bash
# –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–ø–æ–ª–Ω–∏—Ç—å:
1. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ task.md (pending ‚Üí completed)
2. –î–æ–±–∞–≤–∏—Ç—å timestamp –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
3. –£–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
4. –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–≤–∏—Å–∏–º—ã–µ –∑–∞–¥–∞—á–∏ –∫–∞–∫ ready (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
```

### –§–æ—Ä–º–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è task.md
```markdown
### –ó–∞–¥–∞—á–∞ X.X: –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
**–°—Ç–∞—Ç—É—Å**: ‚úÖ COMPLETED  
**–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è**: 2025-01-31 15:30  
**–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è**: 2.5 —á–∞—Å–∞ (–ø–ª–∞–Ω: 3 —á–∞—Å–∞)  

#### –†–µ–∑—É–ª—å—Ç–∞—Ç:
‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç  
‚úÖ –í—Å–µ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã  
‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AmoCRM —Å—Ç–∞–±–∏–ª—å–Ω–∞  

#### –°–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
- [x] –ó–∞–¥–∞—á–∞ 2.1 (–∑–∞–≤–∏—Å–µ–ª–∞ –æ—Ç —ç—Ç–æ–π)
- [x] –ó–∞–¥–∞—á–∞ 2.2 (–∑–∞–≤–∏—Å–µ–ª–∞ –æ—Ç —ç—Ç–æ–π)
```

---

## üîß –ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º

### AmoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
```javascript
// –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TokenManager –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
const amocrmClient = new AmoCRMClient(tokenManager);

// –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
try {
  const result = await amocrmClient.createContact(userData);
} catch (error) {
  if (error.status === 401) {
    await tokenManager.refreshTokens();
    // Retry –æ–ø–µ—Ä–∞—Ü–∏—è
  }
  throw error;
}
```

### VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
```javascript
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π
if (process.env.VK_CLIENT_SECRET === '–í–ê–®_–ó–ê–©–ò–©–Å–ù–ù–´–ô_–ö–õ–Æ–ß_–ò–ó_VK') {
  throw new Error('VK_CLIENT_SECRET not configured');
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –ø—Ä–∏–≤—è–∑–∫–æ–π
const isValidUser = await vkClient.validateUser(accessToken, userId);
if (!isValidUser) {
  throw new ValidationError('Invalid VK user');
}
```

### Database –æ–ø–µ—Ä–∞—Ü–∏–∏
```javascript
// –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å prepared statements
const stmt = db.prepare('SELECT * FROM users WHERE telegram_id = ?');
const user = stmt.get(telegramId);

// –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
const addPoints = db.transaction((userId, amount, type) => {
  db.prepare('UPDATE users SET points = points + ? WHERE id = ?').run(amount, userId);
  db.prepare('INSERT INTO point_transactions (user_id, amount, type) VALUES (?, ?, ?)').run(userId, amount, type);
});
```

---

## üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ç–æ–∫–µ–Ω—ã

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
```javascript
// –í–∞–ª–∏–¥–∞—Ü–∏—è Telegram Web App –¥–∞–Ω–Ω—ã—Ö
const validateTelegramAuth = (initData, botToken) => {
  const urlParams = new URLSearchParams(initData);
  const hash = urlParams.get('hash');
  // –ü–æ–ª–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è HMAC...
};

// Sanitization –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
const sanitizeInput = (input) => {
  return validator.escape(validator.trim(input));
};

// Rate limiting –¥–ª—è –≤—Å–µ—Ö endpoints
app.use('/api', rateLimiter);
```

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏
```javascript
// –¢—Ä–æ–π–Ω–∞—è –∑–∞—â–∏—Ç–∞ —Ç–æ–∫–µ–Ω–æ–≤ AmoCRM
class TokenManager {
  async saveTokens(tokens) {
    // 1. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª (primary)
    await this.saveToFile(tokens);
    // 2. Backup –≤ environment
    await this.saveToEnv(tokens);
    // 3. Persistent –≤ –ë–î
    await this.saveToDatabase(tokens);
  }
}
```

---

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
```javascript
describe('UserService', () => {
  test('should create user with valid data', async () => {
    const userData = { telegramId: '123', firstName: 'Test' };
    const user = await userService.create(userData);
    expect(user.id).toBeDefined();
    expect(user.points).toBe(100); // Welcome bonus
  });

  test('should handle AmoCRM sync failure gracefully', async () => {
    // Mock AmoCRM error
    amocrmService.syncUser.mockRejectedValue(new Error('API Error'));
    
    const userData = { telegramId: '123', firstName: 'Test' };
    // Should not fail user creation if AmoCRM sync fails
    await expect(userService.create(userData)).resolves.toBeDefined();
  });
});
```

### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
```javascript
// –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ flow
test('Complete referral flow', async () => {
  // 1. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const referrer = await createTestUser();
  
  // 2. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ñ-–∫–æ–¥
  const refCode = await generateReferralCode(referrer.id);
  
  // 3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ—Ñ-–∫–æ–¥—É
  const referee = await registerWithReferralCode(refCode);
  
  // 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤
  const updatedReferrer = await getUserById(referrer.id);
  expect(updatedReferrer.points).toBe(200); // 100 welcome + 100 referral
});
```

---

## üì¶ Docker –∏ –¥–µ–ø–ª–æ–π

### –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ volume mappings
```yaml
# docker-compose.yml
volumes:
  - amocrm_tokens:/app/tokens          # –ö–†–ò–¢–ò–ß–ù–û: Persistent —Ç–æ–∫–µ–Ω—ã
  - sqlite_data:/app/database          # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  - logs_data:/app/logs               # –õ–æ–≥–∏
```

### Health checks
```javascript
// –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π health check endpoint
app.get('/health', async (req, res) => {
  try {
    // Check database
    await db.prepare('SELECT 1').get();
    
    // Check critical services
    const amocrmHealth = await amocrmService.healthCheck();
    const vkHealth = await vkService.healthCheck();
    
    res.json({
      status: 'healthy',
      timestamp: new Date().toISOString(),
      services: { amocrm: amocrmHealth, vk: vkHealth }
    });
  } catch (error) {
    res.status(503).json({ status: 'unhealthy', error: error.message });
  }
});
```

---

## üîÑ Workflow –ø—Ä–∞–≤–∏–ª–∞

### Git workflow
- **Feature branches**: `feature/task-2-1-referral-system`
- **Commit messages**: `feat(referral): implement QR code generation (Task 2.1.2)`
- **PR description**: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–¥–∞—á—É –≤ task.md

### Code review checklist
- [ ] –ö–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º
- [ ] –î–æ–±–∞–≤–ª–µ–Ω—ã/–æ–±–Ω–æ–≤–ª–µ–Ω—ã —Ç–µ—Å—Ç—ã
- [ ] –û–±–Ω–æ–≤–ª–µ–Ω task.md —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º
- [ ] –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (–æ—Å–æ–±–µ–Ω–Ω–æ —Ç–æ–∫–µ–Ω—ã)
- [ ] –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- [ ] –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏

### Deployment checklist
- [ ] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç
- [ ] Health check –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 200
- [ ] –¢–æ–∫–µ–Ω—ã AmoCRM –Ω–µ —Å–ª–µ—Ç–µ–ª–∏
- [ ] –í–Ω–µ—à–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
- [ ] –õ–æ–≥–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
- [ ] task.md –æ–±–Ω–æ–≤–ª–µ–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –¥–µ–ø–ª–æ—è

---

## üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –ø–æ –≠–ü–ò–ö–ê–ú (–∏–∑ task.md)

### –≠–ü–ò–ö 1 (P0 - –ö–†–ò–¢–ò–ß–ù–û)
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (VK_CLIENT_SECRET)
- –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è AmoCRM —Ç–æ–∫–µ–Ω–æ–≤
- –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π AmoCRM

### –≠–ü–ò–ö 2 (P1 - –í–´–°–û–ö–ò–ô)
- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å QR-–∫–æ–¥–∞–º–∏
- –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫—ç—à–±—ç–∫–∞
- RFM-–∞–Ω–∞–ª–∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

### –≠–ü–ò–ö 3 (P2 - –°–†–ï–î–ù–ò–ô)
- Instagram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Ü.–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
- –£–ª—É—á—à–µ–Ω–∏–µ Qtickets

### –≠–ü–ò–ö 4 (P3 - –ù–ò–ó–ö–ò–ô)
- Telegram Bot —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- Unisender —Ä–∞—Å—Å—ã–ª–∫–∏
- –ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è

---

## üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

### Pre-commit hooks
```bash
#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ task.md –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏
if [ -f "task.md" ]; then
  echo "‚úÖ Checking task.md updates..."
  # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ task.md –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–º–º–∏—Ç–∞—Ö
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üîí Security check..."
grep -r "–í–ê–®_–ó–ê–©–ò–©–Å–ù–ù–´–ô_–ö–õ–Æ–ß_–ò–ó_VK" . && exit 1
grep -r "YOUR_INSTAGRAM_APP_ID" . && exit 1

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
echo "üß™ Running tests..."
npm test || exit 1
```

### CI/CD –ø—Ä–∞–≤–∏–ª–∞
- **–ù–∞ –∫–∞–∂–¥—ã–π push**: –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
- **–ù–∞ main branch**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π
- **–ü–æ—Å–ª–µ –¥–µ–ø–ª–æ—è**: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ task.md —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
- **Backup —Ç–æ–∫–µ–Ω–æ–≤**: –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –¥–µ–ø–ª–æ–µ–º

---

## üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞

### –ù–ò–ö–û–ì–î–ê –ù–ï –î–ï–õ–ê–¢–¨:
- ‚ùå –ö–æ–º–º–∏—Ç–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã/–∫–ª—é—á–∏
- ‚ùå –ü—Ä–æ–ø—É—Å–∫–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ task.md
- ‚ùå –°–º–µ—à–∏–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É —Å API —Å–ª–æ–µ–º
- ‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ Node.js
- ‚ùå –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤–Ω–µ—à–Ω–∏—Ö API

### –í–°–ï–ì–î–ê –î–ï–õ–ê–¢–¨:
- ‚úÖ –û–±–Ω–æ–≤–ª—è—Ç—å task.md –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏
- ‚úÖ –ü–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
- ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
- ‚úÖ –ü—Ä–æ–≤–µ—Ä—è—Ç—å health endpoints –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
- ‚úÖ –î–µ–ª–∞—Ç—å backup —Ç–æ–∫–µ–Ω–æ–≤ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º

---

**–≠—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π –ø—Ä–æ–µ–∫—Ç–∞ Farolero Loyalty App.**