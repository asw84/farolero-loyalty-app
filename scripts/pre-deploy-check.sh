#!/bin/bash
# scripts/pre-deploy-check.sh
# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é (–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –æ—Å–Ω–æ–≤–Ω—ã–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º)

set -e

echo "üöÄ === PRE-DEPLOY VALIDATION ==="
echo "‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é..."

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

ERRORS=0
WARNINGS=0

check_required() {
    local item="$1"
    local command="$2"
    
    if eval "$command" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ $item${NC}"
    else
        echo -e "${RED}‚ùå $item${NC}"
        ((ERRORS++))
    fi
}

check_optional() {
    local item="$1"
    local command="$2"
    
    if eval "$command" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ $item${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  $item${NC}"
        ((WARNINGS++))
    fi
}

echo ""
echo "üîç –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:"

check_required "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "docker --version"
check_required "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" "docker-compose --version"
check_required "–§–∞–π–ª docker-compose.yml —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f docker-compose.yml ]"
check_required "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -d backend ]"
check_required "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -d frontend ]"
check_required "–§–∞–π–ª backend/package.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/package.json ]"
check_required "–§–∞–π–ª backend/.env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/.env ]"
check_required "–§–∞–π–ª backend/server.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/server.js ]"

echo ""
echo "üîß –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"

if [ -f "backend/.env" ]; then
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    check_required "AMOCRM_DOMAIN –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^AMOCRM_DOMAIN=.\+' backend/.env"
    check_required "AMOCRM_CLIENT_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^AMOCRM_CLIENT_ID=.\+' backend/.env"
    check_required "AMOCRM_CLIENT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^AMOCRM_CLIENT_SECRET=.\+' backend/.env"
    check_required "VK_CLIENT_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^VK_CLIENT_ID=.\+' backend/.env"
    check_required "JWT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^JWT_SECRET=.\+' backend/.env"
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    check_optional "TELEGRAM_BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^TELEGRAM_BOT_TOKEN=.\+' backend/.env && ! grep -q 'YOUR_' backend/.env"
    check_optional "VK_CLIENT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^VK_CLIENT_SECRET=.\+' backend/.env && ! grep -q 'REQUIRED' backend/.env"
    check_optional "INSTAGRAM_APP_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" "grep -q '^INSTAGRAM_APP_ID=.\+' backend/.env && ! grep -q 'YOUR_' backend/.env"
fi

echo ""
echo "üìÅ –ü–†–û–í–ï–†–ö–ê –°–¢–†–£–ö–¢–£–†–´ –ü–†–û–ï–ö–¢–ê:"

check_required "backend/amocrm/amocrm.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/amocrm/amocrm.json ]"
check_required "backend/database.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/database.js ]"
check_required "backend/amocrm/apiClient.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f backend/amocrm/apiClient.js ]"

echo ""
echo "üê≥ –ü–†–û–í–ï–†–ö–ê DOCKER –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"

check_required "Docker daemon –∑–∞–ø—É—â–µ–Ω" "docker info"
check_required "docker-compose.yml –≤–∞–ª–∏–¥–µ–Ω" "docker-compose config"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_optional "–ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω" "! netstat -tuln 2>/dev/null | grep ':3001 ' || ! ss -tuln 2>/dev/null | grep ':3001 '"
check_optional "–ü–æ—Ä—Ç 8080 —Å–≤–æ–±–æ–¥–µ–Ω" "! netstat -tuln 2>/dev/null | grep ':8080 ' || ! ss -tuln 2>/dev/null | grep ':8080 '"

echo ""
echo "üìä === –†–ï–ó–£–õ–¨–¢–ê–¢ PRE-DEPLOY –ü–†–û–í–ï–†–ö–ò ==="

if [ $ERRORS -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –í–°–ï –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò${NC}"
    
    if [ $WARNINGS -eq 0 ]; then
        echo -e "${GREEN}üéâ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ!${NC}"
        echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
        echo "  bash scripts/test-complete.sh"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ï–°–¢–¨ $WARNINGS –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ô${NC}"
        echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    fi
    
    exit 0
else
    echo -e "${RED}‚ùå –ù–ê–ô–î–ï–ù–û $ERRORS –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö${NC}"
    echo -e "${RED}–ü–†–û–ï–ö–¢ –ù–ï –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ!${NC}"
    echo ""
    echo "–£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É."
    exit 1
fi
