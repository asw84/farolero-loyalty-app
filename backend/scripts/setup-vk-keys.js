#!/usr/bin/env node
// backend/scripts/setup-vk-keys.js
// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VK –∫–ª—é—á–µ–π

const readline = require('readline');
const fs = require('fs');
const path = require('path');
const crypto = require('crypto');

const ENV_PATH = path.join(__dirname, '..', '.env');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('üîµ === –ù–ê–°–¢–†–û–ô–ö–ê VK –ö–õ–Æ–ß–ï–ô ===');
console.log('');

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function main() {
    console.log('üìã –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é');
    console.log('');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env
    let envContent = '';
    if (fs.existsSync(ENV_PATH)) {
        envContent = fs.readFileSync(ENV_PATH, 'utf-8');
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª');
    } else {
        console.log('‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π');
        // –ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
        const examplePath = path.join(__dirname, '..', 'env.example');
        if (fs.existsSync(examplePath)) {
            envContent = fs.readFileSync(examplePath, 'utf-8');
        }
    }
    
    console.log('');
    console.log('üîë –ü–û–õ–£–ß–ï–ù–ò–ï VK –ö–õ–Æ–ß–ï–ô:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ https://dev.vk.com/');
    console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ)');
    console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ "–ó–∞—â–∏—â—ë–Ω–Ω—ã–π –∫–ª—é—á" –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    console.log('');
    
    // VK_CLIENT_SECRET
    const clientSecret = await question('–í–≤–µ–¥–∏—Ç–µ VK_CLIENT_SECRET (–∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∫–ª—é—á): ');
    if (!clientSecret || clientSecret.includes('–í–ê–®_–ó–ê–©–ò–©–Å–ù–ù–´–ô_–ö–õ–Æ–ß')) {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á! –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á –∏–∑ VK Developers');
        process.exit(1);
    }
    
    // VK_SERVICE_KEY (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    console.log('');
    console.log('üîß VK_SERVICE_KEY –Ω—É–∂–µ–Ω –¥–ª—è VK ID API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)');
    const serviceKey = await question('–í–≤–µ–¥–∏—Ç–µ VK_SERVICE_KEY (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ');
    
    // VK_GROUP_ID (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    console.log('');
    console.log('üë• VK_GROUP_ID –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ');
    const groupId = await question('–í–≤–µ–¥–∏—Ç–µ VK_GROUP_ID (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ');
    
    // JWT_SECRET
    console.log('');
    console.log('üîê –ì–µ–Ω–µ—Ä–∏—Ä—É—é JWT_SECRET...');
    const jwtSecret = crypto.randomBytes(64).toString('hex');
    console.log('‚úÖ JWT_SECRET —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º .env
    console.log('');
    console.log('üíæ –û–±–Ω–æ–≤–ª—è—é .env —Ñ–∞–π–ª...');
    
    // –ó–∞–º–µ–Ω—è–µ–º –∫–ª—é—á–∏
    envContent = envContent.replace(
        /VK_CLIENT_SECRET=.*/g, 
        `VK_CLIENT_SECRET=${clientSecret}`
    );
    
    if (serviceKey && serviceKey.trim()) {
        envContent = envContent.replace(
            /VK_SERVICE_KEY=.*/g,
            `VK_SERVICE_KEY=${serviceKey}`
        );
    }
    
    if (groupId && groupId.trim() && /^\d+$/.test(groupId)) {
        envContent = envContent.replace(
            /VK_GROUP_ID=.*/g,
            `VK_GROUP_ID=${groupId}`
        );
    }
    
    envContent = envContent.replace(
        /JWT_SECRET=.*/g,
        `JWT_SECRET=${jwtSecret}`
    );
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    fs.writeFileSync(ENV_PATH, envContent);
    console.log('‚úÖ .env —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω');
    
    console.log('');
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:');
    console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-vk-integration.js');
    console.log('');
    
    console.log('üéØ –ì–û–¢–û–í–û! VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    console.log('');
    console.log('üìä –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ—Å—Ç–æ–º: node backend/test-vk-integration.js');
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: npm start');
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    
    rl.close();
}

main().catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    rl.close();
    process.exit(1);
});
