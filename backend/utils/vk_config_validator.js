// backend/utils/vk-config-validator.js
// –í–∞–ª–∏–¥–∞—Ç–æ—Ä VK –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ñ–∏–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π

class VKConfigValidator {
    constructor() {
        this.config = {
            CLIENT_ID: process.env.VK_CLIENT_ID,
            CLIENT_SECRET: process.env.VK_CLIENT_SECRET,
            REDIRECT_URI: process.env.VK_REDIRECT_URI,
            SERVICE_KEY: process.env.VK_SERVICE_KEY,
            GROUP_ID: process.env.VK_GROUP_ID,
            GROUP_TOKEN: process.env.VK_GROUP_TOKEN,
            JWT_SECRET: process.env.JWT_SECRET
        };
        
        this.placeholders = [
            '–í–ê–®_–ó–ê–©–ò–©–Å–ù–ù–´–ô_–ö–õ–Æ–ß_–ò–ó_VK',
            '–ü–û–õ–£–ß–ò–¢–ï_–ó–ê–©–ò–©–Å–ù–ù–´–ô_–ö–õ–Æ–ß_–ò–ó_VK_DEVELOPERS',
            '–í–ê–®_–°–ï–†–í–ò–°–ù–´–ô_–ö–õ–Æ–ß_–î–õ–Ø_VK_ID_API',
            '–ü–û–õ–£–ß–ò–¢–ï_–°–ï–†–í–ò–°–ù–´–ô_–ö–õ–Æ–ß_–ò–ó_VK_DEVELOPERS',
            'ID_–°–û–û–ë–©–ï–°–¢–í–ê_–ë–ï–ó_-',
            '–ì–†–£–ü–ü–û–í–û–ô_–¢–û–ö–ï–ù_–°_–ü–†–ê–í–ê–ú–ò',
            'YOUR_VK_CLIENT_ID',
            'your_secret_key_here',
            'super_secret_for_state_use_strong_random_string'
        ];
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–º
     */
    isPlaceholder(value) {
        if (!value) return false;
        
        return this.placeholders.some(placeholder => 
            value.includes(placeholder) || 
            value === placeholder
        );
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –∫–ª—é—á–µ–π
     */
    validateCritical() {
        const errors = [];
        
        // VK_CLIENT_SECRET - –∫—Ä–∏—Ç–∏—á–Ω–æ
        if (!this.config.CLIENT_SECRET || this.isPlaceholder(this.config.CLIENT_SECRET)) {
            errors.push({
                key: 'VK_CLIENT_SECRET',
                message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder',
                severity: 'critical',
                solution: '–ü–æ–ª—É—á–∏—Ç–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –∫–ª—é—á –∏–∑ https://dev.vk.com/'
            });
        }
        
        // VK_CLIENT_ID - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º
        if (!this.config.CLIENT_ID || isNaN(this.config.CLIENT_ID)) {
            errors.push({
                key: 'VK_CLIENT_ID',
                message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º',
                severity: 'critical',
                solution: '–£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ VK Developers'
            });
        }
        
        // VK_REDIRECT_URI - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å HTTPS
        if (!this.config.REDIRECT_URI || !this.config.REDIRECT_URI.startsWith('https://')) {
            errors.push({
                key: 'VK_REDIRECT_URI',
                message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ HTTPS',
                severity: 'critical',
                solution: '–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HTTPS redirect URI'
            });
        }
        
        // JWT_SECRET - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª–∏–Ω–Ω—ã–º
        if (!this.config.JWT_SECRET || this.config.JWT_SECRET.length < 32) {
            errors.push({
                key: 'JWT_SECRET',
                message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (< 32 —Å–∏–º–≤–æ–ª–æ–≤)',
                severity: 'critical',
                solution: '–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ: node -e "console.log(require(\'crypto\').randomBytes(64).toString(\'hex\'))"'
            });
        }
        
        return errors;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–π
     */
    validateOptional() {
        const warnings = [];
        
        // VK_SERVICE_KEY
        if (!this.config.SERVICE_KEY || this.isPlaceholder(this.config.SERVICE_KEY)) {
            warnings.push({
                key: 'VK_SERVICE_KEY',
                message: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è VK ID API)',
                severity: 'warning',
                impact: '–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ VK ID API'
            });
        }
        
        // VK_GROUP_ID
        if (!this.config.GROUP_ID || isNaN(this.config.GROUP_ID)) {
            warnings.push({
                key: 'VK_GROUP_ID',
                message: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)',
                severity: 'warning',
                impact: '–ù–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ VK'
            });
        }
        
        // VK_GROUP_TOKEN
        if (!this.config.GROUP_TOKEN || this.isPlaceholder(this.config.GROUP_TOKEN)) {
            warnings.push({
                key: 'VK_GROUP_TOKEN',
                message: '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)',
                severity: 'warning',
                impact: '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ API –≥—Ä—É–ø–ø—ã VK'
            });
        }
        
        return warnings;
    }

    /**
     * –ü–æ–ª–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    validate() {
        const errors = this.validateCritical();
        const warnings = this.validateOptional();
        
        const hasPlaceholders = Object.entries(this.config).some(([key, value]) => 
            value && this.isPlaceholder(value)
        );
        
        return {
            valid: errors.length === 0,
            errors,
            warnings,
            hasPlaceholders,
            config: this.config,
            readiness: this.calculateReadiness(errors, warnings)
        };
    }

    /**
     * –†–∞—Å—á–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
     */
    calculateReadiness(errors, warnings) {
        const totalChecks = 7; // –í—Å–µ–≥–æ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
        const failedChecks = errors.length;
        const warningChecks = warnings.length;
        
        const criticalScore = ((totalChecks - failedChecks) / totalChecks) * 80; // 80% –∑–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ
        const optionalScore = ((3 - warningChecks) / 3) * 20; // 20% –∑–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ
        
        return Math.round(criticalScore + optionalScore);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
     */
    generateReport() {
        const result = this.validate();
        
        console.log('üîµ === VK –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===');
        console.log('');
        
        if (result.valid) {
            console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞');
            console.log(`üéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${result.readiness}%`);
        } else {
            console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò:');
            result.errors.forEach(error => {
                console.log(`‚ùå ${error.key}: ${error.message}`);
                console.log(`   –†–µ—à–µ–Ω–∏–µ: ${error.solution}`);
            });
        }
        
        if (result.warnings.length > 0) {
            console.log('');
            console.log('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:');
            result.warnings.forEach(warning => {
                console.log(`‚ö†Ô∏è  ${warning.key}: ${warning.message}`);
                console.log(`   –í–ª–∏—è–Ω–∏–µ: ${warning.impact}`);
            });
        }
        
        if (result.hasPlaceholders) {
            console.log('');
            console.log('üîß –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–õ–ï–ô–°–•–û–õ–î–ï–†–´:');
            console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: node backend/scripts/setup-vk-keys.js');
        }
        
        console.log('');
        console.log(`üéØ –û–±—â–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å VK: ${result.readiness}%`);
        
        return result;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ runtime –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
     */
    validateAtStartup() {
        const result = this.validate();
        
        if (!result.valid) {
            console.error('üîµ VK CONFIGURATION ERROR:');
            result.errors.forEach(error => {
                console.error(`‚ùå ${error.key}: ${error.message}`);
            });
            
            if (result.hasPlaceholders) {
                console.error('');
                console.error('üîß –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É: node backend/scripts/setup-vk-keys.js');
            }
            
            // –í development —Ä–µ–∂–∏–º–µ –Ω–µ –ø–∞–¥–∞–µ–º, —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
            if (process.env.NODE_ENV === 'production') {
                throw new Error('VK configuration is invalid for production');
            } else {
                console.warn('‚ö†Ô∏è  VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª—é—á–µ–π');
            }
        }
        
        return result;
    }

    /**
     * Middleware –¥–ª—è Express –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ VK endpoints
     */
    requireValidConfig(req, res, next) {
        const result = this.validate();
        
        if (!result.valid) {
            return res.status(503).json({
                error: 'VK integration not configured',
                message: 'VK_CLIENT_SECRET and other keys need to be set up',
                setup_guide: '/docs/VK_SETUP_AUTOMATED.md',
                readiness: result.readiness
            });
        }
        
        next();
    }
}

module.exports = VKConfigValidator;
