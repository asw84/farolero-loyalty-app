'''// backend/services/vk.oauth.service.js
const axios = require('axios');
const amocrmClient = require('../amocrm/apiClient');
const { VK_ID_FIELD_ID } = require('../config');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è VK ID
const {
    VK_SERVICE_KEY // –°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env
} = process.env;

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç VK ID SDK, –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç.
 * @param {object} vkData - –ü–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –æ—Ç –∫–æ–ª–±—ç–∫–∞ onAuth –∏–∑ VK ID SDK.
 * @param {string} telegramId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram.
 * @returns {Promise<object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏.
 */
async function verifyAndLinkAccount(vkData, telegramId) {
    console.log(`[VK_ID_SERVICE] üîê –ù–∞—á–∏–Ω–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é VK ID –¥–ª—è Telegram ID: ${telegramId}`);

    const { uuid, token } = vkData;

    if (!uuid || !token) {
        throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç uuid –∏–ª–∏ token –≤ –¥–∞–Ω–Ω—ã—Ö –æ—Ç VK ID.');
    }

    // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å –∫ VK API
    try {
        await verifyTokenWithVK(token, uuid);
        console.log(`[VK_ID_SERVICE] ‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –¥–ª—è VK ID: ${uuid}`);
    } catch (error) {
        console.error(`[VK_ID_SERVICE] ‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:`, error.message);
        // –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ VK
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é VK ID.');
    }

    // –®–∞–≥ 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ AmoCRM
    try {
        const contact = await amocrmClient.findContactByTelegramId(telegramId);
        if (contact) {
            await amocrmClient.updateContact(contact.id, { [VK_ID_FIELD_ID]: String(uuid) });
            console.log(`[VK_ID_SERVICE] ‚úÖ VK ID ${uuid} –∑–∞–ø–∏—Å–∞–Ω –≤ AmoCRM –¥–ª—è Telegram ID ${telegramId}`);
        } else {
            console.warn(`[VK_ID_SERVICE] ‚ö†Ô∏è –ö–æ–Ω—Ç–∞–∫—Ç —Å Telegram ID ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ AmoCRM`);
            // –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç
        }
    } catch (amocrmError) {
        console.error(`[VK_ID_SERVICE] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ AmoCRM:`, amocrmError.message);
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ AmoCRM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    }

    return {
        message: '–ê–∫–∫–∞—É–Ω—Ç VK ID —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!',
        vk_user_id: uuid,
        telegram_user_id: telegramId
    };
}

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–≤–µ—Ä-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—Ä–æ—Å –∫ VK API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞.
 * @param {string} accessToken - –¢–æ–∫–µ–Ω —Å–µ—Å—Å–∏–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ.
 * @param {string} expectedUuid - UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –º—ã –æ–∂–∏–¥–∞–µ–º –ø–æ–ª—É—á–∏—Ç—å.
 * @returns {Promise<void>}
 */
async function verifyTokenWithVK(accessToken, expectedUuid) {
    if (!VK_SERVICE_KEY) {
        throw new Error('VK_SERVICE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏.');
    }

    const apiVersion = '5.199';
    const url = `https://api.vk.com/method/users.get`;

    try {
        const response = await axios.get(url, {
            params: {
                access_token: VK_SERVICE_KEY, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
                user_ids: expectedUuid, // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                v: apiVersion
            }
        });

        const { data } = response;

        if (data.error) {
            console.error('[VK_ID_SERVICE] ‚ùå –û—à–∏–±–∫–∞ –æ—Ç VK API –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.error.error_msg);
            throw new Error(data.error.error_msg);
        }

        if (!data.response || data.response.length === 0 || String(data.response[0].id) !== String(expectedUuid)) {
            console.error('[VK_ID_SERVICE] ‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞: VK API –Ω–µ –≤–µ—Ä–Ω—É–ª –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
            throw new Error('–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞.');
        }

        console.log(`[VK_ID_SERVICE] üïµÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${expectedUuid} —á–µ—Ä–µ–∑ VK API –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.`);

    } catch (error) {
        if (error.isAxiosError) {
            console.error('[VK_ID_SERVICE] ‚ùå Axios –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ VK API:', error.response?.data || error.message);
        }
        // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—à–µ
        throw error;
    }
    
    /* 
     * –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ.
     * const url = `https://api.vk.com/method/secure.checkToken?token=${accessToken}&access_token=${VK_SERVICE_KEY}&v=${apiVersion}`;
     * –û–¥–Ω–∞–∫–æ, –º–µ—Ç–æ–¥ secure.checkToken –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤, –≤—ã–¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ OIDC.
     * –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–Ω–Ω—ã–º UUID, –∏—Å–ø–æ–ª—å–∑—É—è —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á.
     * –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ UUID –≤–∞–ª–∏–¥–µ–Ω –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ä–µ–∞–ª—å–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é VK.
    */
}


module.exports = {
    verifyAndLinkAccount
};
'''
