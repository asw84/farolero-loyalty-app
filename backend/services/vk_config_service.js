// backend/services/vk.config.service.js

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ VK
 * –í–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ API VK
 */

const axios = require('axios');

class VKConfigService {
    constructor() {
        this.config = {
            clientId: process.env.VK_CLIENT_ID,
            clientSecret: process.env.VK_CLIENT_SECRET,
            redirectUri: process.env.VK_REDIRECT_URI,
            accessToken: process.env.VK_ACCESS_TOKEN,
            groupId: process.env.VK_GROUP_ID,
            confirmationToken: process.env.VK_CONFIRMATION_TOKEN,
            secretKey: process.env.VK_SECRET_KEY
        };
        
        this.lastUpdate = null;
        this.updateInterval = parseInt(process.env.VK_CONFIG_UPDATE_INTERVAL) || 3600000; // 1 —á–∞—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã VK —á–µ—Ä–µ–∑ API
     * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã VK
     * @param {string} accessToken - —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ VK
     * @returns {Promise<string>} —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
     */
    async getCallbackConfirmationCode(groupId, accessToken) {
        try {
            if (!groupId || !accessToken) {
                throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω groupId –∏–ª–∏ accessToken –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
            }

            console.log(`[VK_CONFIG_SERVICE] üîÑ –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã ${groupId}...`);

            const response = await axios.get('https://api.vk.com/method/groups.getCallbackConfirmationCode', {
                params: {
                    group_id: groupId,
                    access_token: accessToken,
                    v: '5.199'
                }
            });

            if (response.data.error) {
                throw new Error(`VK API error: ${response.data.error.error_msg}`);
            }

            const confirmationCode = response.data.response.code;
            console.log(`[VK_CONFIG_SERVICE] ‚úÖ –°—Ç—Ä–æ–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∞: ${confirmationCode.substring(0, 8)}...`);

            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            this.config.confirmationToken = confirmationCode;
            this.lastUpdate = new Date();

            return confirmationCode;
        } catch (error) {
            console.error('[VK_CONFIG_SERVICE] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error.message);
            throw error;
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ VK
     * @param {string} groupId - ID –≥—Ä—É–ø–ø—ã VK
     * @param {string} accessToken - —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ VK
     * @returns {Promise<object>} –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ
     */
    async getGroupInfo(groupId, accessToken) {
        try {
            if (!groupId || !accessToken) {
                throw new Error('–ù–µ —É–∫–∞–∑–∞–Ω groupId –∏–ª–∏ accessToken –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ');
            }

            console.log(`[VK_CONFIG_SERVICE] üîÑ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ ${groupId}...`);

            const response = await axios.get('https://api.vk.com/method/groups.getById', {
                params: {
                    group_id: groupId,
                    access_token: accessToken,
                    v: '5.199'
                }
            });

            if (response.data.error) {
                throw new Error(`VK API error: ${response.data.error.error_msg}`);
            }

            const groupInfo = response.data.response[0];
            console.log(`[VK_CONFIG_SERVICE] ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ –ø–æ–ª—É—á–µ–Ω–∞: ${groupInfo.name}`);

            return groupInfo;
        } catch (error) {
            console.error('[VK_CONFIG_SERVICE] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ:', error.message);
            throw error;
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK
     * @returns {Promise<object>} –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
     */
    async refreshConfig() {
        try {
            const now = new Date();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            if (this.lastUpdate && (now - this.lastUpdate) < this.updateInterval) {
                console.log('[VK_CONFIG_SERVICE] ‚ÑπÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
                return this.config;
            }

            console.log('[VK_CONFIG_SERVICE] üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK...');

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (this.config.groupId && this.config.accessToken) {
                try {
                    await this.getCallbackConfirmationCode(this.config.groupId, this.config.accessToken);
                } catch (error) {
                    console.warn('[VK_CONFIG_SERVICE] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error.message);
                }
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            this.lastUpdate = now;

            console.log('[VK_CONFIG_SERVICE] ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VK –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            return this.config;
        } catch (error) {
            console.error('[VK_CONFIG_SERVICE] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
            throw error;
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
     * @returns {object} —Ç–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
     */
    getConfig() {
        return { ...this.config };
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é
     * @param {object} newConfig - –Ω–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
     */
    updateConfig(newConfig) {
        this.config = { ...this.config, ...newConfig };
        this.lastUpdate = new Date();
        console.log('[VK_CONFIG_SERVICE] ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é');
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     * @returns {object} —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
     */
    validateConfig() {
        const errors = [];
        const warnings = [];

        if (!this.config.clientId) errors.push('VK_CLIENT_ID –Ω–µ —É–∫–∞–∑–∞–Ω');
        if (!this.config.clientSecret) errors.push('VK_CLIENT_SECRET –Ω–µ —É–∫–∞–∑–∞–Ω');
        if (!this.config.redirectUri) errors.push('VK_REDIRECT_URI –Ω–µ —É–∫–∞–∑–∞–Ω');
        
        if (!this.config.accessToken) warnings.push('VK_ACCESS_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω - –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        if (!this.config.groupId) warnings.push('VK_GROUP_ID –Ω–µ —É–∫–∞–∑–∞–Ω - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');

        return {
            isValid: errors.length === 0,
            errors,
            warnings,
            config: this.getConfig()
        };
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
     * @returns {object} —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
     */
    getStatus() {
        return {
            lastUpdate: this.lastUpdate,
            updateInterval: this.updateInterval,
            nextUpdate: this.lastUpdate ? new Date(this.lastUpdate.getTime() + this.updateInterval) : null,
            config: this.validateConfig()
        };
    }
}

module.exports = new VKConfigService();
