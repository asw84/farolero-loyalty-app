// backend/test-achievements-system.js
// –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π

const { createAchievementsTables } = require('./scripts/create-achievements-tables');
const achievementsService = require('./services/achievements.service');
const { findOrCreateUser, addPointsByTelegramId, addPurchase } = require('./database');

async function testAchievementsSystem() {
    console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...\n');

    try {
        // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü
        console.log('1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...');
        await createAchievementsTables();
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã\n');

        // 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const testTelegramId = 'test_achievements_user';
        await findOrCreateUser(testTelegramId, 'telegram_user_id');
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${testTelegramId} —Å–æ–∑–¥–∞–Ω\n`);

        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
        console.log('3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...');
        const allAchievements = await achievementsService.getAllAchievements();
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${allAchievements.data.length} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:`);
        allAchievements.data.forEach(a => {
            console.log(`   ${a.icon} ${a.name} - ${a.description} (${a.points_reward} –±–∞–ª–ª–æ–≤)`);
        });
        console.log('');

        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç–æ)
        console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const userAchievements = await achievementsService.getUserAchievements(testTelegramId);
        const completed = userAchievements.data.filter(a => a.is_completed);
        console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${completed.length}`);
        console.log('');

        // 5. –¢–µ—Å—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–ü–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞"
        console.log('5Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è "–ü–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞"...');
        await addPurchase(testTelegramId, 1000, 'qtickets', 'test_order_1');
        const checkResult1 = await achievementsService.checkAndUnlockAchievements(testTelegramId, 'purchase');
        console.log(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${checkResult1.totalUnlocked}`);
        if (checkResult1.newlyUnlocked.length > 0) {
            checkResult1.newlyUnlocked.forEach(a => {
                console.log(`   üèÜ ${a.name} (+${a.points_reward} –±–∞–ª–ª–æ–≤)`);
            });
        }
        console.log('');

        // 6. –¢–µ—Å—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –±–∞–ª–ª–∞–º
        console.log('6Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –±–∞–ª–ª–∞–º...');
        await addPointsByTelegramId(testTelegramId, 900, 'manual', 'test_points');
        const checkResult2 = await achievementsService.checkAndUnlockAchievements(testTelegramId, 'points');
        console.log(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${checkResult2.totalUnlocked}`);
        if (checkResult2.newlyUnlocked.length > 0) {
            checkResult2.newlyUnlocked.forEach(a => {
                console.log(`   üèÜ ${a.name} (+${a.points_reward} –±–∞–ª–ª–æ–≤)`);
            });
        }
        console.log('');

        // 7. –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('7Ô∏è‚É£ –¢–µ—Å—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º...');
        const { dbRun } = require('./database');
        await dbRun(`
            INSERT OR IGNORE INTO referrals 
            (referrer_telegram_id, referee_telegram_id, referral_code, activated_at, bonus_paid)
            VALUES (?, ?, ?, ?, ?)
        `, [testTelegramId, 'referee_1', 'TEST_REF_1', new Date().toISOString(), true]);
        
        const checkResult3 = await achievementsService.checkAndUnlockAchievements(testTelegramId, 'referral');
        console.log(`‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${checkResult3.totalUnlocked}`);
        if (checkResult3.newlyUnlocked.length > 0) {
            checkResult3.newlyUnlocked.forEach(a => {
                console.log(`   üèÜ ${a.name} (+${a.points_reward} –±–∞–ª–ª–æ–≤)`);
            });
        }
        console.log('');

        // 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('8Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const finalAchievements = await achievementsService.getUserAchievements(testTelegramId);
        const finalCompleted = finalAchievements.data.filter(a => a.is_completed);
        const inProgress = finalAchievements.data.filter(a => !a.is_completed && a.current_progress > 0);
        
        console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${finalCompleted.length}`);
        finalCompleted.forEach(a => {
            console.log(`   ‚úÖ ${a.icon} ${a.name} - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ ${new Date(a.unlocked_at).toLocaleString()}`);
        });
        
        console.log(`üìä –í –ø—Ä–æ—Ü–µ—Å—Å–µ: ${inProgress.length}`);
        inProgress.forEach(a => {
            console.log(`   üîÑ ${a.icon} ${a.name} - ${a.current_progress}/${a.condition_value} (${a.progress_percentage}%)`);
        });
        console.log('');

        // 9. –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        console.log('9Ô∏è‚É£ –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...');
        const stats = await achievementsService.getUserAchievementsStats(testTelegramId);
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
        console.log(`   –í—Å–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${stats.data.total_achievements}`);
        console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω–æ: ${stats.data.completed_achievements}`);
        console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${stats.data.completion_rate}%`);
        console.log(`   –ë–∞–ª–ª–æ–≤ –æ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: ${stats.data.total_points_from_achievements}`);
        console.log('');

        // 10. –¢–µ—Å—Ç —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('üîü –¢–µ—Å—Ç —Ç–æ–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        const leaderboard = await achievementsService.getAchievementsLeaderboard(5);
        console.log(`‚úÖ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º:`);
        leaderboard.data.forEach((user, index) => {
            console.log(`   ${index + 1}. ${user.user_telegram_id} - ${user.achievements_count} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (${user.points_from_achievements} –±–∞–ª–ª–æ–≤)`);
        });

        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
        
        // API endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('\nüìã API endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log(`GET  /api/achievements - –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`);
        console.log(`GET  /api/achievements/user/${testTelegramId} - –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
        console.log(`GET  /api/achievements/stats/${testTelegramId} - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`);
        console.log(`POST /api/achievements/check/${testTelegramId} - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è`);
        console.log(`GET  /api/achievements/leaderboard - —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        console.log(`GET  /api/achievements/categories - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π`);

        return true;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:', error);
        throw error;
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    testAchievementsSystem()
        .then(() => {
            console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            process.exit(0);
        })
        .catch(error => {
            console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ:', error);
            process.exit(1);
        });
}

module.exports = { testAchievementsSystem };
