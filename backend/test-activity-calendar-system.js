// backend/test-activity-calendar-system.js
// –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

const activityCalendarService = require('./services/activity-calendar.service');
const { findOrCreateUser, addPointsByTelegramId, addPurchase, dbRun } = require('./database');

async function testActivityCalendarSystem() {
    console.log('üìÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...\n');

    try {
        // 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const testTelegramId = 'test_calendar_user';
        await findOrCreateUser(testTelegramId, 'telegram_user_id');
        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${testTelegramId} —Å–æ–∑–¥–∞–Ω\n`);

        // 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        console.log('2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
        await generateTestActivityData(testTelegramId);
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã\n');

        // 3. –¢–µ—Å—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        console.log('3Ô∏è‚É£ –¢–µ—Å—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π...');
        const end = new Date();
        const start = new Date();
        start.setDate(end.getDate() - 30);
        
        const endDate = end.toISOString().split('T')[0];
        const startDate = start.toISOString().split('T')[0];
        
        const calendar30 = await activityCalendarService.getUserActivityCalendar(testTelegramId, startDate, endDate);
        console.log(`‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ–ª—É—á–µ–Ω: ${calendar30.data.calendar.length} –¥–Ω–µ–π`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: ${calendar30.data.summary.total_active_days}/${calendar30.data.summary.total_days}`);
        console.log(`   –ü—Ä–æ—Ü–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${calendar30.data.summary.activity_rate}%`);
        console.log(`   –¢–µ–∫—É—â–∏–π —Å—Ç—Ä–∏–∫: ${calendar30.data.summary.current_streak} –¥–Ω–µ–π`);
        console.log(`   –õ—É—á—à–∏–π —Å—Ç—Ä–∏–∫: ${calendar30.data.summary.longest_streak} –¥–Ω–µ–π\n`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–Ω–µ–π
        const activeDays = calendar30.data.calendar.filter(day => day.activity_score > 0).slice(0, 5);
        console.log('üìä –ü—Ä–∏–º–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π:');
        activeDays.forEach(day => {
            console.log(`   ${day.date} (${day.day_name}): ${day.activity_level} —É—Ä–æ–≤–µ–Ω—å, ${day.activity_score} –±–∞–ª–ª–æ–≤`);
            console.log(`      –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${day.summary.activity_types.join(', ')}`);
            console.log(`      –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${day.summary.total_points_earned} –±–∞–ª–ª–æ–≤, ${day.summary.total_actions} –¥–µ–π—Å—Ç–≤–∏–π`);
        });
        console.log('');

        // 4. –¢–µ—Å—Ç –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        console.log('4Ô∏è‚É£ –¢–µ—Å—Ç –º–µ—Å—è—á–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        const now = new Date();
        const monthlyStats = await activityCalendarService.getMonthlyActivitySummary(
            testTelegramId, 
            now.getFullYear(), 
            now.getMonth() + 1
        );
        
        console.log(`‚úÖ –ú–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ ${monthlyStats.data.month_name} ${monthlyStats.data.year}:`);
        console.log(`   –ù–µ–¥–µ–ª—å –≤ –º–µ—Å—è—Ü–µ: ${monthlyStats.data.weeks.length}`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π: ${monthlyStats.data.stats.active_days}`);
        console.log(`   –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${monthlyStats.data.stats.high_activity_days} –¥–Ω–µ–π`);
        console.log(`   –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${monthlyStats.data.stats.medium_activity_days} –¥–Ω–µ–π`);
        console.log(`   –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${monthlyStats.data.stats.low_activity_days} –¥–Ω–µ–π`);
        console.log(`   –í—Å–µ–≥–æ –±–∞–ª–ª–æ–≤: ${monthlyStats.data.stats.total_points}`);
        console.log(`   –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: ${monthlyStats.data.stats.total_actions}`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ: ${monthlyStats.data.stats.weekend_activity}%`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±—É–¥–Ω–∏: ${monthlyStats.data.stats.weekday_activity}%\n`);

        // 5. –¢–µ—Å—Ç –≥–æ–¥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (heat map)
        console.log('5Ô∏è‚É£ –¢–µ—Å—Ç –≥–æ–¥–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        const yearlyStats = await activityCalendarService.getYearlyActivityHeatmap(testTelegramId, now.getFullYear());
        
        console.log(`‚úÖ –ì–æ–¥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ ${yearlyStats.data.year} –≥–æ–¥:`);
        console.log(`   –í—Å–µ–≥–æ –¥–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏: ${yearlyStats.data.heatmap.length}`);
        console.log(`   –ú–µ—Å—è—Ü–µ–≤ —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é: ${yearlyStats.data.months_summary.length}`);
        console.log('');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–µ—Å—è—Ü–∞–º
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º:');
        yearlyStats.data.months_summary.forEach(month => {
            if (month.stats.active_days > 0) {
                console.log(`   ${month.month_name}: ${month.stats.active_days} –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π, ${month.stats.total_points} –±–∞–ª–ª–æ–≤`);
            }
        });
        console.log('');

        // 6. –ê–Ω–∞–ª–∏–∑ heat map –¥–∞–Ω–Ω—ã—Ö
        console.log('6Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —É—Ä–æ–≤–Ω—è–º...');
        const heatmapLevels = {
            none: yearlyStats.data.heatmap.filter(day => day.activity_level === 'none').length,
            low: yearlyStats.data.heatmap.filter(day => day.activity_level === 'low').length,
            medium: yearlyStats.data.heatmap.filter(day => day.activity_level === 'medium').length,
            high: yearlyStats.data.heatmap.filter(day => day.activity_level === 'high').length
        };

        console.log('‚úÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:');
        console.log(`   üî¥ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${heatmapLevels.none} –¥–Ω–µ–π`);
        console.log(`   üü° –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${heatmapLevels.low} –¥–Ω–µ–π`);
        console.log(`   üü† –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${heatmapLevels.medium} –¥–Ω–µ–π`);
        console.log(`   üü¢ –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${heatmapLevels.high} –¥–Ω–µ–π\n`);

        // 7. –ü—Ä–∏–º–µ—Ä—ã –¥–Ω–µ–π —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        console.log('7Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä—ã –¥–Ω–µ–π –ø–æ —É—Ä–æ–≤–Ω—è–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
        
        const exampleHigh = yearlyStats.data.heatmap.find(day => day.activity_level === 'high');
        const exampleMedium = yearlyStats.data.heatmap.find(day => day.activity_level === 'medium');
        const exampleLow = yearlyStats.data.heatmap.find(day => day.activity_level === 'low');

        if (exampleHigh) {
            console.log(`üü¢ –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (${exampleHigh.date}): ${exampleHigh.activity_score} –±–∞–ª–ª–æ–≤`);
            console.log(`   ${exampleHigh.tooltip.points} –±–∞–ª–ª–æ–≤, ${exampleHigh.tooltip.actions} –¥–µ–π—Å—Ç–≤–∏–π`);
            console.log(`   –¢–∏–ø—ã: ${exampleHigh.tooltip.types.join(', ')}`);
        }

        if (exampleMedium) {
            console.log(`üü† –°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (${exampleMedium.date}): ${exampleMedium.activity_score} –±–∞–ª–ª–æ–≤`);
        }

        if (exampleLow) {
            console.log(`üü° –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (${exampleLow.date}): ${exampleLow.activity_score} –±–∞–ª–ª–æ–≤`);
        }
        console.log('');

        console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
        
        // API endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        console.log('\nüìã API endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
        console.log(`GET  /api/activity-calendar/${testTelegramId} - –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞ –ø–µ—Ä–∏–æ–¥`);
        console.log(`GET  /api/activity-calendar/${testTelegramId}/current - —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü`);
        console.log(`GET  /api/activity-calendar/${testTelegramId}/stats - –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`);
        console.log(`GET  /api/activity-calendar/${testTelegramId}/week - –Ω–µ–¥–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å`);
        console.log(`GET  /api/activity-calendar/${testTelegramId}/month/2025/1 - –º–µ—Å—è—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å`);
        console.log(`GET  /api/activity-calendar/${testTelegramId}/year/2025 - –≥–æ–¥–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å`);

        console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:');
        console.log('# –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π');
        console.log(`curl "http://localhost:3001/api/activity-calendar/${testTelegramId}?period=7"`);
        
        console.log('\n# –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü');
        console.log(`curl http://localhost:3001/api/activity-calendar/${testTelegramId}/current`);
        
        console.log('\n# –ù–µ–¥–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å');
        console.log(`curl "http://localhost:3001/api/activity-calendar/${testTelegramId}/week?weekOffset=0"`);
        
        console.log('\n# –ì–æ–¥–æ–≤–∞—è heat map');
        console.log(`curl http://localhost:3001/api/activity-calendar/${testTelegramId}/year/2025`);

        return true;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        throw error;
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
 */
async function generateTestActivityData(telegramId) {
    const today = new Date();
    
    for (let i = 0; i < 30; i++) {
        const date = new Date(today);
        date.setDate(today.getDate() - i);
        const dateStr = date.toISOString().split('T')[0];
        
        // –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–≤—ã—à–µ –≤ –±—É–¥–Ω–∏)
        const isWeekend = date.getDay() === 0 || date.getDay() === 6;
        const activityChance = isWeekend ? 0.6 : 0.8;
        
        if (Math.random() < activityChance) {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            
            // –ü–æ–∫—É–ø–∫–∏ (—Ä–µ–∂–µ)
            if (Math.random() < 0.2) {
                await addPurchase(telegramId, Math.floor(Math.random() * 5000) + 1000, 'qtickets', `test_order_${i}`);
                console.log(`   üí≥ –ü–æ–∫—É–ø–∫–∞ ${dateStr}`);
            }
            
            // –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ (–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)
            if (Math.random() < 0.7) {
                const points = Math.floor(Math.random() * 50) + 10;
                await addPointsByTelegramId(telegramId, points, 'test_activity', `test_action_${i}`);
            }
            
            // –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è (—Å–∏–º—É–ª—è—Ü–∏—è)
            if (Math.random() < 0.8) {
                try {
                    await dbRun(`
                        INSERT OR IGNORE INTO user_daily_tasks 
                        (user_telegram_id, daily_task_id, task_date, current_progress, is_completed, points_earned)
                        VALUES (?, 1, ?, 1, 1, 10)
                    `, [telegramId, dateStr]);
                } catch (error) {
                    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                }
            }
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
            if (Math.random() < 0.4) {
                try {
                    await dbRun(`
                        INSERT OR IGNORE INTO user_daily_tasks 
                        (user_telegram_id, daily_task_id, task_date, current_progress, is_completed, points_earned)
                        VALUES (?, 2, ?, 1, 1, 15)
                    `, [telegramId, dateStr]);
                } catch (error) {
                    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                }
            }
        }
    }
    
    console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞ 30 –¥–Ω–µ–π`);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    testActivityCalendarSystem()
        .then(() => {
            console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
            process.exit(0);
        })
        .catch(error => {
            console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ:', error);
            process.exit(1);
        });
}

module.exports = { testActivityCalendarSystem };
