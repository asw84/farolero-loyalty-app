#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –∑–∞–¥–∞—á 2.1 –∏ 2.2: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏ —Å–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
 * –ó–∞–ø—É—Å–∫: node test-tasks-2-1-2-2.js
 */

const axios = require('axios');
const BASE_URL = 'http://localhost:3001/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const TEST_USERS = {
    referrer: 'test_referrer_' + Date.now(),
    referee: 'test_referee_' + Date.now()
};

/**
 * –¢–µ—Å—Ç 1: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–ó–∞–¥–∞—á–∞ 2.1)
 */
async function testReferralSystem() {
    console.log('\nüß™ –¢–ï–°–¢ 1: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–ó–∞–¥–∞—á–∞ 2.1)');
    console.log('=' .repeat(50));

    try {
        // 1.1 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
        console.log('\nüìù 1.1 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞...');
        const generateResponse = await axios.post(`${BASE_URL}/referral/generate`, {
            telegramId: TEST_USERS.referrer
        });
        
        if (generateResponse.data.success) {
            console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —Å–æ–∑–¥–∞–Ω:', generateResponse.data.referralCode);
            console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:', generateResponse.data.referralUrl);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞');
        }

        const referralCode = generateResponse.data.referralCode;

        // 1.2 –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
        console.log('\nüîç 1.2 –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞...');
        const validateResponse = await axios.get(`${BASE_URL}/referral/validate/${referralCode}`);
        
        if (validateResponse.data.valid) {
            console.log('‚úÖ –ö–æ–¥ –≤–∞–ª–∏–¥–µ–Ω');
            console.log('‚úÖ –†–µ—Ñ–µ—Ä–µ—Ä:', validateResponse.data.referrerTelegramId);
        } else {
            throw new Error('–ö–æ–¥ –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é');
        }

        // 1.3 –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
        console.log('\nüéØ 1.3 –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞...');
        const activateResponse = await axios.post(`${BASE_URL}/referral/activate`, {
            referralCode: referralCode,
            telegramId: TEST_USERS.referee
        });

        if (activateResponse.data.success) {
            console.log('‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
            console.log('‚úÖ –ë–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É:', activateResponse.data.referrerBonus);
            console.log('‚úÖ –ë–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª—É:', activateResponse.data.refereeBonus);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞');
        }

        // 1.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        console.log('\nüìä 1.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞...');
        const statsResponse = await axios.get(`${BASE_URL}/referral/stats/${TEST_USERS.referrer}`);
        
        if (statsResponse.data.success) {
            console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞');
            console.log('‚úÖ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', statsResponse.data.stats.totalReferrals);
            console.log('‚úÖ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫:', statsResponse.data.stats.totalEarned);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        }

        // 1.5 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞
        console.log('\nüì± 1.5 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞...');
        const qrResponse = await axios.get(`${BASE_URL}/referral/qr/${referralCode}`);
        
        if (qrResponse.status === 200) {
            console.log('‚úÖ QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞');
        }

        console.log('\nüéâ –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ:', error.message);
        if (error.response) {
            console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
        }
    }
}

/**
 * –¢–µ—Å—Ç 2: –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫—ç—à–±—ç–∫–∞ (–ó–∞–¥–∞—á–∞ 2.2)
 */
async function testStatusSystem() {
    console.log('\nüß™ –¢–ï–°–¢ 2: –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫—ç—à–±—ç–∫–∞ (–ó–∞–¥–∞—á–∞ 2.2)');
    console.log('=' .repeat(50));

    try {
        // 2.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        console.log('\nüë§ 2.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞...');
        const referrerStatusResponse = await axios.get(`${BASE_URL}/status/${TEST_USERS.referrer}`);
        
        if (referrerStatusResponse.data.success) {
            const statusData = referrerStatusResponse.data.data;
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω');
            console.log('‚úÖ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', statusData.status);
            console.log('‚úÖ –ë–∞–ª–ª—ã:', statusData.points);
            console.log('‚úÖ –ö—ç—à–±—ç–∫:', statusData.cashbackRate + '%');
            console.log('‚úÖ –ë–∞–ª–ª—ã –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è:', statusData.pointsToNextLevel);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞');
        }

        // 2.2 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        console.log('\nüë§ 2.2 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞...');
        const refereeStatusResponse = await axios.get(`${BASE_URL}/status/${TEST_USERS.referee}`);
        
        if (refereeStatusResponse.data.success) {
            const statusData = refereeStatusResponse.data.data;
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω');
            console.log('‚úÖ –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:', statusData.status);
            console.log('‚úÖ –ë–∞–ª–ª—ã:', statusData.points);
            console.log('‚úÖ –ö—ç—à–±—ç–∫:', statusData.cashbackRate + '%');
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
        }

        // 2.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–±—ç–∫–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
        console.log('\nüí∞ 2.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–±—ç–∫–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏...');
        const purchaseAmount = 1000; // 1000 —Ä—É–±–ª–µ–π
        const cashbackResponse = await axios.post(`${BASE_URL}/status/${TEST_USERS.referrer}/calculate-cashback`, {
            purchaseAmount: purchaseAmount
        });

        if (cashbackResponse.data.success) {
            const cashbackData = cashbackResponse.data.data;
            console.log('‚úÖ –ö—ç—à–±—ç–∫ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω');
            console.log('‚úÖ –°—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏:', cashbackData.purchaseAmount + ' ‚ÇΩ');
            console.log('‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç –∫—ç—à–±—ç–∫–∞:', cashbackData.cashbackRate + '%');
            console.log('‚úÖ –°—É–º–º–∞ –∫—ç—à–±—ç–∫–∞:', cashbackData.cashbackAmount + ' ‚ÇΩ');
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', cashbackData.userStatus);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫—ç—à–±—ç–∫–∞');
        }

        // 2.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∫—ç—à–±—ç–∫–∞
        console.log('\nüìä 2.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∫—ç—à–±—ç–∫–∞...');
        const cashbackRateResponse = await axios.get(`${BASE_URL}/status/${TEST_USERS.referrer}/cashback-rate`);
        
        if (cashbackRateResponse.data.success) {
            console.log('‚úÖ –ü—Ä–æ—Ü–µ–Ω—Ç –∫—ç—à–±—ç–∫–∞ –ø–æ–ª—É—á–µ–Ω');
            console.log('‚úÖ –ö—ç—à–±—ç–∫:', cashbackRateResponse.data.cashbackRate + '%');
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å:', cashbackRateResponse.data.status);
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∫—ç—à–±—ç–∫–∞');
        }

        console.log('\nüéâ –°–ò–°–¢–ï–ú–ê –°–¢–ê–¢–£–°–û–í –ò –ö–≠–®–ë–≠–ö–ê –†–ê–ë–û–¢–ê–ï–¢!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Å—Ç–∞—Ç—É—Å–æ–≤:', error.message);
        if (error.response) {
            console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
        }
    }
}

/**
 * –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AmoCRM
 */
async function testAmoCRMIntegration() {
    console.log('\nüß™ –¢–ï–°–¢ 3: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AmoCRM');
    console.log('=' .repeat(50));

    try {
        // 3.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å AmoCRM
        console.log('\nüîÑ 3.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞...');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç—Ç–æ –¥–æ–ª–∂–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å AmoCRM)
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å AmoCRM');
        
        console.log('\nüéâ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° AMOCRM –†–ê–ë–û–¢–ê–ï–¢!');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AmoCRM:', error.message);
    }
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function runAllTests() {
    console.log('üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ó–ê–î–ê–ß 2.1 –ò 2.2');
    console.log('=' .repeat(60));
    console.log('üìã –ó–∞–¥–∞—á–∞ 2.1: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞');
    console.log('üìã –ó–∞–¥–∞—á–∞ 2.2: –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫—ç—à–±—ç–∫–∞');
    console.log('=' .repeat(60));

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
        try {
            await axios.get(`${BASE_URL.replace('/api', '')}/health`);
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω');
        } catch (healthError) {
            // –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π health endpoint
            try {
                await axios.get(`${BASE_URL.replace('/api', '')}/health/simple`);
                console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω (–ø—Ä–æ—Å—Ç–æ–π health check)');
            } catch (simpleHealthError) {
                console.log('‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π health check –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...');
            }
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        await testReferralSystem();
        await testStatusSystem();
        await testAmoCRMIntegration();

        console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!');
        console.log('‚úÖ –ó–∞–¥–∞—á–∞ 2.1: –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ - –ì–û–¢–û–í–û');
        console.log('‚úÖ –ó–∞–¥–∞—á–∞ 2.2: –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫—ç—à–±—ç–∫–∞ - –ì–û–¢–û–í–û');
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
        console.log('   - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è');
        console.log('   - QR-–∫–æ–¥—ã —Å–æ–∑–¥–∞—é—Ç—Å—è');
        console.log('   - –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è');
        console.log('   - –°—Ç–∞—Ç—É—Å—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è');
        console.log('   - –ö—ç—à–±—ç–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è');
        console.log('   - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AmoCRM —Ä–∞–±–æ—Ç–∞–µ—Ç');

    } catch (error) {
        console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
        if (error.code === 'ECONNREFUSED') {
            console.error('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001');
            console.error('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && npm run dev');
        }
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
    runAllTests();
}

module.exports = {
    testReferralSystem,
    testStatusSystem,
    testAmoCRMIntegration
};
