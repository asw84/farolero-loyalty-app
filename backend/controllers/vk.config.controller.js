// backend/controllers/vk.config.controller.js

const vkConfigService = require('../services/vk.config.service');

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK
 * GET /api/vk/config
 */
const getVKConfig = async (req, res) => {
    try {
        const config = vkConfigService.getConfig();
        const validation = vkConfigService.validateConfig();
        
        res.json({
            success: true,
            config: config,
            validation: validation
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK'
        });
    }
};

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK
 * PUT /api/vk/config
 */
const updateVKConfig = async (req, res) => {
    try {
        const newConfig = req.body;
        
        if (!newConfig || typeof newConfig !== 'object') {
            return res.status(400).json({
                success: false,
                error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏'
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        vkConfigService.updateConfig(newConfig);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const updatedConfig = vkConfigService.getConfig();
        const validation = vkConfigService.validateConfig();
        
        res.json({
            success: true,
            message: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VK –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            config: updatedConfig,
            validation: validation
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK'
        });
    }
};

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK —á–µ—Ä–µ–∑ API VK
 * POST /api/vk/config/refresh
 */
const refreshVKConfig = async (req, res) => {
    try {
        console.log('[VK_CONFIG_CONTROLLER] üîÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK...');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ API VK
        const updatedConfig = await vkConfigService.refreshConfig();
        const validation = vkConfigService.validateConfig();
        
        res.json({
            success: true,
            message: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VK –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ API VK',
            config: updatedConfig,
            validation: validation
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ API VK:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK —á–µ—Ä–µ–∑ API',
            details: error.message
        });
    }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã VK
 * POST /api/vk/config/confirmation-code
 */
const getConfirmationCode = async (req, res) => {
    try {
        const { groupId, accessToken } = req.body;
        
        if (!groupId || !accessToken) {
            return res.status(400).json({
                success: false,
                error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å groupId –∏ accessToken'
            });
        }

        console.log(`[VK_CONFIG_CONTROLLER] üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã ${groupId}...`);
        
        const confirmationCode = await vkConfigService.getCallbackConfirmationCode(groupId, accessToken);
        
        res.json({
            success: true,
            message: '–°—Ç—Ä–æ–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–∞',
            confirmationCode: confirmationCode,
            groupId: groupId
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
            details: error.message
        });
    }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ VK
 * POST /api/vk/config/group-info
 */
const getGroupInfo = async (req, res) => {
    try {
        const { groupId, accessToken } = req.body;
        
        if (!groupId || !accessToken) {
            return res.status(400).json({
                success: false,
                error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å groupId –∏ accessToken'
            });
        }

        console.log(`[VK_CONFIG_CONTROLLER] üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ ${groupId}...`);
        
        const groupInfo = await vkConfigService.getGroupInfo(groupId, accessToken);
        
        res.json({
            success: true,
            message: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ –ø–æ–ª—É—á–µ–Ω–∞',
            groupInfo: groupInfo
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ',
            details: error.message
        });
    }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK
 * GET /api/vk/config/status
 */
const getVKConfigStatus = async (req, res) => {
    try {
        const status = vkConfigService.getStatus();
        
        res.json({
            success: true,
            status: status
        });
    } catch (error) {
        console.error('[VK_CONFIG_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK'
        });
    }
};

module.exports = {
    getVKConfig,
    updateVKConfig,
    refreshVKConfig,
    getConfirmationCode,
    getGroupInfo,
    getVKConfigStatus
};
