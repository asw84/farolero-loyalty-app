// backend/controllers/instagram-activity.controller.js
// –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è API –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Instagram

const instagramActivityService = require('../services/instagram-activity.service');
const { getUserByTelegramId } = require('../database');

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram –∏ –Ω–∞—á–∏—Å–ª—è–µ—Ç –±–∞–ª–ª—ã
 * POST /api/instagram/check-activity
 * Body: { telegram_user_id: string, access_token: string }
 */
async function checkActivity(req, res) {
    try {
        const { telegram_user_id, access_token } = req.body;
        
        if (!telegram_user_id) {
            return res.status(400).json({
                error: 'missing_telegram_user_id',
                message: '–¢—Ä–µ–±—É–µ—Ç—Å—è telegram_user_id'
            });
        }

        if (!access_token) {
            return res.status(400).json({
                error: 'missing_access_token',
                message: '–¢—Ä–µ–±—É–µ—Ç—Å—è access_token Instagram'
            });
        }

        console.log(`[INSTAGRAM_ACTIVITY_CONTROLLER] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegram_user_id}`);

        const result = await instagramActivityService.checkUserActivity(telegram_user_id, access_token);
        
        if (result.success) {
            return res.json({
                success: true,
                message: `–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞—á–∏—Å–ª–µ–Ω–æ ${result.totalPointsAwarded} –±–∞–ª–ª–æ–≤`,
                data: {
                    account_id: result.accountId,
                    media_checked: result.mediaChecked,
                    total_points_awarded: result.totalPointsAwarded,
                    activities: result.activities
                }
            });
        } else {
            return res.status(500).json({
                success: false,
                error: result.error,
                message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Instagram'
            });
        }

    } catch (error) {
        console.error('[INSTAGRAM_ACTIVITY_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –≤ checkActivity:', error);
        return res.status(500).json({
            error: 'internal_error',
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
 * POST /api/instagram/check-all-activities
 * –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ cron job
 */
async function checkAllActivities(req, res) {
    try {
        console.log(`[INSTAGRAM_ACTIVITY_CONTROLLER] üîÑ –ó–∞–ø—É—Å–∫ –º–∞—Å—Å–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ Instagram –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏`);
        
        // TODO: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
        // –≠—Ç–æ —Ç—Ä–µ–±—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è Instagram —Ç–æ–∫–µ–Ω–æ–≤
        
        return res.json({
            success: true,
            message: '–§—É–Ω–∫—Ü–∏—è –º–∞—Å—Å–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏—Ç–µ—Ä–∞—Ü–∏—è—Ö',
            note: '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ö—Ä–∞–Ω–µ–Ω–∏–µ Instagram access_token –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'
        });

    } catch (error) {
        console.error('[INSTAGRAM_ACTIVITY_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –≤ checkAllActivities:', error);
        return res.status(500).json({
            error: 'internal_error',
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram
 * GET /api/instagram/activity-stats/:telegram_user_id
 */
async function getActivityStats(req, res) {
    try {
        const { telegram_user_id } = req.params;
        
        if (!telegram_user_id) {
            return res.status(400).json({
                error: 'missing_telegram_user_id',
                message: '–¢—Ä–µ–±—É–µ—Ç—Å—è telegram_user_id'
            });
        }

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const user = await getUserByTelegramId(telegram_user_id);
        
        if (!user) {
            return res.status(404).json({
                error: 'user_not_found',
                message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
            });
        }

        // TODO: –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
        return res.json({
            success: true,
            data: {
                user_id: user.id,
                telegram_user_id: telegram_user_id,
                instagram_stats: {
                    total_posts_checked: 0,
                    total_points_earned: 0,
                    last_check: null,
                    note: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
                }
            }
        });

    } catch (error) {
        console.error('[INSTAGRAM_ACTIVITY_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –≤ getActivityStats:', error);
        return res.status(500).json({
            error: 'internal_error',
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram
 * POST /api/instagram/verify-activity
 * Body: { telegram_user_id: string, access_token: string, action: string, target: object }
 */
async function verifyActivity(req, res) {
    try {
        const { telegram_user_id, access_token, action, target } = req.body;
        
        if (!telegram_user_id || !access_token || !action) {
            return res.status(400).json({
                error: 'missing_required_fields',
                message: '–¢—Ä–µ–±—É—é—Ç—Å—è –ø–æ–ª—è: telegram_user_id, access_token, action'
            });
        }

        console.log(`[INSTAGRAM_ACTIVITY_CONTROLLER] üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${action} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegram_user_id}`);

        // –í Instagram API –Ω–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∞–π–∫–∏ –Ω–∞ —á—É–∂–∏—Ö –ø–æ—Å—Ç–∞—Ö
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö API
        const supportedActions = ['post_published', 'story_published'];
        
        if (!supportedActions.includes(action)) {
            return res.status(400).json({
                error: 'unsupported_action',
                message: `Instagram API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –¥–µ–π—Å—Ç–≤–∏—è "${action}"`,
                supported_actions: supportedActions,
                note: 'Instagram API –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
            });
        }

        // –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        const result = await instagramActivityService.checkUserActivity(telegram_user_id, access_token);
        
        return res.json({
            success: result.success,
            message: result.success ? '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞' : '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            action: action,
            result: result
        });

    } catch (error) {
        console.error('[INSTAGRAM_ACTIVITY_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –≤ verifyActivity:', error);
        return res.status(500).json({
            error: 'internal_error',
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö Instagram API
 * GET /api/instagram/api-capabilities
 */
async function getApiCapabilities(req, res) {
    try {
        return res.json({
            success: true,
            instagram_api_capabilities: {
                supported_features: [
                    '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
                    '–ê–Ω–∞–ª–∏–∑ engagement —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
                    'Insights –¥–ª—è –ø–æ—Å—Ç–æ–≤, stories, reels',
                    '–ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –ª–∞–π–∫–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',
                    '–ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –∑–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
                ],
                limitations: [
                    '–ù–µ–ª—å–∑—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∞–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —á—É–∂–∏—Ö –ø–æ—Å—Ç–∞—Ö',
                    '–ù–µ–ª—å–∑—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ —á—É–∂–∏—Ö –ø–æ—Å—Ç–∞—Ö',
                    '–ù–µ—Ç webhook API –¥–ª—è —Å–æ–±—ã—Ç–∏–π (–∫–∞–∫ –≤ VK)',
                    '–¢—Ä–µ–±—É–µ—Ç—Å—è Instagram Business –∞–∫–∫–∞—É–Ω—Ç',
                    'Insights –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
                ],
                api_differences: {
                    vk_api: '–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –ª—é–±—ã—Ö –ø–æ—Å—Ç–∞—Ö',
                    instagram_api: '–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
                },
                recommended_workflow: [
                    '1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ Instagram OAuth',
                    '2. –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–æ–≤—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
                    '3. –ù–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã –∑–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∏ –∫–∞—á–µ—Å—Ç–≤–æ engagement',
                    '4. –ü—Ä–µ–º–∏—É–º –±–∞–ª–ª—ã –∑–∞ –≤—ã—Å–æ–∫–∏–π engagement rate'
                ]
            }
        });
    } catch (error) {
        console.error('[INSTAGRAM_ACTIVITY_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –≤ getApiCapabilities:', error);
        return res.status(500).json({
            error: 'internal_error',
            message: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
        });
    }
}

module.exports = {
    checkActivity,
    checkAllActivities,
    getActivityStats,
    verifyActivity,
    getApiCapabilities
};
