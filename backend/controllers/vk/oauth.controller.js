// backend/controllers/vk.oauth.controller.js
const vkOAuthService = require('../services/vk.oauth.service');
const htmlTemplateService = require('../services/html.template.service');

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VK –¥–ª—è frontend
 * GET /api/vk/config
 */
const getVKClientConfig = async (req, res) => {
    console.log('[VK_ID_CONTROLLER] üîß getVKConfig called!');
    try {
        const config = {
            appId: process.env.VK_CLIENT_ID,
            redirectUri: process.env.VK_REDIRECT_URI,
            apiUrl: process.env.APP_BASE_URL || 'https://api.5425685-au70735.twc1.net'
        };
        
        console.log('[VK_ID_CONTROLLER] üîß Config:', config);
        
        if (!config.appId) {
            console.log('[VK_ID_CONTROLLER] ‚ùå VK_CLIENT_ID not configured');
            return res.status(500).json({
                success: false,
                error: 'VK_CLIENT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
            });
        }
        
        console.log('[VK_ID_CONTROLLER] ‚úÖ Sending config response');
        res.json({
            success: true,
            config: config
        });
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ VK'
        });
    }
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –æ—Ç VK ID SDK
 * POST /api/oauth/vk/verify-auth
 */
const verifyVKIDAuth = async (req, res) => {
    try {
        const { vkData, telegramId } = req.body;

        if (!vkData || !telegramId) {
            console.error('[VK_ID_CONTROLLER] ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç vkData –∏–ª–∏ telegramId –≤ –∑–∞–ø—Ä–æ—Å–µ');
            return res.status(400).json({ success: false, error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ: vkData –∏ telegramId' });
        }

        console.log(`[VK_ID_CONTROLLER] üîê –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é VK ID –¥–ª—è Telegram ID: ${telegramId}`);

        const result = await vkOAuthService.verifyAndLinkAccount(vkData, telegramId);

        console.log(`[VK_ID_CONTROLLER] ‚úÖ –ê–∫–∫–∞—É–Ω—Ç VK ID —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –¥–ª—è Telegram ID: ${telegramId}`);
        
        res.status(200).json({ success: true, ...result });

    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö VK ID:', error);
        res.status(500).json({ success: false, error: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ VK ID' });
    }
};


/**
 * API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ HTML —à–∞–±–ª–æ–Ω–æ–≤
 * GET /api/vk/oauth/templates/config
 */
const getTemplatesConfig = async (req, res) => {
    try {
        const config = htmlTemplateService.getConfig();
        res.json({
            success: true,
            config: config
        });
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤'
        });
    }
};

/**
 * API endpoint –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ HTML —à–∞–±–ª–æ–Ω–æ–≤
 * PUT /api/vk/oauth/templates/config
 */
const updateTemplatesConfig = async (req, res) => {
    try {
        const newConfig = req.body;
        
        if (!newConfig || typeof newConfig !== 'object') {
            return res.status(400).json({
                success: false,
                error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏'
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        htmlTemplateService.updateConfig(newConfig);
        
        res.json({
            success: true,
            message: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            config: htmlTemplateService.getConfig()
        });
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤'
        });
    }
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ VK
 * GET /auth/vk/login?tg_user_id=123
 */
const handleVKLogin = async (req, res) => {
    try {
        const { tg_user_id } = req.query;
        
        if (!tg_user_id) {
            return res.status(400).send('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä tg_user_id');
        }
        
        console.log(`[VK_ID_CONTROLLER] üîê –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é VK –¥–ª—è Telegram ID: ${tg_user_id}`);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK OAuth
        const clientId = process.env.VK_CLIENT_ID;
        const redirectUri = encodeURIComponent(process.env.VK_REDIRECT_URI);
        const state = Buffer.from(JSON.stringify({ tg_user_id })).toString('base64');
        
        const authUrl = `https://oauth.vk.com/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&v=5.199&state=${state}&scope=email`;
        
        console.log(`[VK_ID_CONTROLLER] üîó –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ VK OAuth: ${authUrl}`);
        
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK
        res.redirect(authUrl);
        
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é VK:', error);
        res.status(500).send('–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    }
};

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback –æ—Ç VK OAuth
 * GET /api/oauth/vk/callback?code=...&state=...
 */
const handleCallback = async (req, res) => {
    try {
        const { code, state } = req.query;
        
        if (!code || !state) {
            return res.status(400).send('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã');
        }
        
        // –î–µ–∫–æ–¥–∏—Ä—É–µ–º state –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è tg_user_id
        const stateData = JSON.parse(Buffer.from(state, 'base64').toString());
        const { tg_user_id } = stateData;
        
        console.log(`[VK_ID_CONTROLLER] üîê –ü–æ–ª—É—á–µ–Ω callback –æ—Ç VK OAuth –¥–ª—è Telegram ID: ${tg_user_id}`);
        
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–±–º–µ–Ω–∞ –∫–æ–¥–∞ –Ω–∞ —Ç–æ–∫–µ–Ω –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        // –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞
        
        const html = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è VK</title>
                <style>
                    body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                    .success { color: green; }
                    .error { color: red; }
                </style>
            </head>
            <body>
                <h1 class="success">‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è VK –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h1>
                <p>–ê–∫–∫–∞—É–Ω—Ç VK —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–º—É Telegram –∞–∫–∫–∞—É–Ω—Ç—É.</p>
                <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É –≤–∫–ª–∞–¥–∫—É –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ Telegram.</p>
                <script>
                    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –≤–∫–ª–∞–¥–∫–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        window.close();
                    }, 3000);
                </script>
            </body>
            </html>
        `;
        
        res.send(html);
        
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback –æ—Ç VK OAuth:', error);
        
        const html = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK</title>
                <style>
                    body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                    .success { color: green; }
                    .error { color: red; }
                </style>
            </head>
            <body>
                <h1 class="error">‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK</h1>
                <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞ VK.</p>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</p>
            </body>
            </html>
        `;
        
        res.status(500).send(html);
    }
};

module.exports = {
    verifyVKIDAuth,
    getTemplatesConfig,
    updateTemplatesConfig,
    getVKConfig: getVKClientConfig, // –û—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –≥–¥–µ-—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    handleVKLogin,
    handleCallback,
    getVKClientConfig
};