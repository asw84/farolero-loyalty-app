// backend/controllers/vk.oauth.controller.js
const vkOAuthService = require('../services/vk.oauth.service');
const htmlTemplateService = require('../services/html.template.service');

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –æ—Ç VK ID SDK
 * POST /api/oauth/vk/verify-auth
 */
const verifyVKIDAuth = async (req, res) => {
    try {
        const { vkData, telegramId } = req.body;

        if (!vkData || !telegramId) {
            console.error('[VK_ID_CONTROLLER] ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç vkData –∏–ª–∏ telegramId –≤ –∑–∞–ø—Ä–æ—Å–µ');
            return res.status(400).json({ success: false, error: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ: vkData –∏ telegramId' });
        }

        console.log(`[VK_ID_CONTROLLER] üîê –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é VK ID –¥–ª—è Telegram ID: ${telegramId}`);

        const result = await vkOAuthService.verifyAndLinkAccount(vkData, telegramId);

        console.log(`[VK_ID_CONTROLLER] ‚úÖ –ê–∫–∫–∞—É–Ω—Ç VK ID —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –¥–ª—è Telegram ID: ${telegramId}`);
        
        res.status(200).json({ success: true, ...result });

    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö VK ID:', error);
        res.status(500).json({ success: false, error: error.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ VK ID' });
    }
};


/**
 * API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ HTML —à–∞–±–ª–æ–Ω–æ–≤
 * GET /api/vk/oauth/templates/config
 */
const getTemplatesConfig = async (req, res) => {
    try {
        const config = htmlTemplateService.getConfig();
        res.json({
            success: true,
            config: config
        });
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤'
        });
    }
};

/**
 * API endpoint –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ HTML —à–∞–±–ª–æ–Ω–æ–≤
 * PUT /api/vk/oauth/templates/config
 */
const updateTemplatesConfig = async (req, res) => {
    try {
        const newConfig = req.body;
        
        if (!newConfig || typeof newConfig !== 'object') {
            return res.status(400).json({
                success: false,
                error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏'
            });
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        htmlTemplateService.updateConfig(newConfig);
        
        res.json({
            success: true,
            message: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞',
            config: htmlTemplateService.getConfig()
        });
    } catch (error) {
        console.error('[VK_ID_CONTROLLER] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤:', error);
        res.status(500).json({
            success: false,
            error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤'
        });
    }
};

module.exports = {
    verifyVKIDAuth,
    getTemplatesConfig,
    updateTemplatesConfig
};