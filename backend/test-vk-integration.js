// backend/test-vk-integration.js
// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

require('dotenv').config({ path: require('path').resolve(__dirname, '.env') });
const axios = require('axios');

console.log('üîµ === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê VK –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ===');
console.log('üìÖ', new Date().toLocaleString());
console.log('');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('‚öôÔ∏è  === –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò VK ===');

const vkConfig = {
    CLIENT_ID: process.env.VK_CLIENT_ID,
    CLIENT_SECRET: process.env.VK_CLIENT_SECRET,
    REDIRECT_URI: process.env.VK_REDIRECT_URI,
    SERVICE_KEY: process.env.VK_SERVICE_KEY,
    GROUP_ID: process.env.VK_GROUP_ID,
    GROUP_TOKEN: process.env.VK_GROUP_TOKEN,
    JWT_SECRET: process.env.JWT_SECRET
};

let errors = 0;
let warnings = 0;

function logError(message) {
    console.log('‚ùå', message);
    errors++;
}

function logWarning(message) {
    console.log('‚ö†Ô∏è ', message);
    warnings++;
}

function logSuccess(message) {
    console.log('‚úÖ', message);
}

function logInfo(message) {
    console.log('‚ÑπÔ∏è ', message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
if (vkConfig.CLIENT_ID && vkConfig.CLIENT_ID !== 'YOUR_VK_CLIENT_ID') {
    logSuccess(`VK_CLIENT_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${vkConfig.CLIENT_ID}`);
} else {
    logError('VK_CLIENT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder');
}

if (vkConfig.CLIENT_SECRET && !vkConfig.CLIENT_SECRET.includes('REQUIRED')) {
    logSuccess('VK_CLIENT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    logError('VK_CLIENT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (—Å–æ–¥–µ—Ä–∂–∏—Ç REQUIRED)');
}

if (vkConfig.REDIRECT_URI && vkConfig.REDIRECT_URI.startsWith('https://')) {
    logSuccess(`VK_REDIRECT_URI –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${vkConfig.REDIRECT_URI}`);
} else {
    logError('VK_REDIRECT_URI –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
}

if (vkConfig.JWT_SECRET && vkConfig.JWT_SECRET.length > 10) {
    logSuccess('JWT_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    logError('JWT_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
if (vkConfig.SERVICE_KEY && !vkConfig.SERVICE_KEY.includes('REQUIRED')) {
    logSuccess('VK_SERVICE_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    logWarning('VK_SERVICE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è VK ID API)');
}

if (vkConfig.GROUP_ID && !vkConfig.GROUP_ID.includes('ID_–°–û–û–ë–©–ï–°–¢–í–ê')) {
    logSuccess(`VK_GROUP_ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω: ${vkConfig.GROUP_ID}`);
} else {
    logWarning('VK_GROUP_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ)');
}

if (vkConfig.GROUP_TOKEN && !vkConfig.GROUP_TOKEN.includes('–ì–†–£–ü–ü–û–í–û–ô_–¢–û–ö–ï–ù')) {
    logSuccess('VK_GROUP_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
} else {
    logWarning('VK_GROUP_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ)');
}

console.log('');
console.log('üåê === –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò VK API ===');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å VK OAuth API
async function testVkOAuthAPI() {
    try {
        logInfo('–ü—Ä–æ–≤–µ—Ä—è–µ–º VK OAuth API...');
        const response = await axios.get('https://oauth.vk.com/authorize', {
            params: {
                client_id: '1', // –ó–∞–≤–µ–¥–æ–º–æ –Ω–µ–≤–µ—Ä–Ω—ã–π ID –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
                redirect_uri: 'https://example.com',
                response_type: 'code'
            },
            timeout: 10000,
            validateStatus: () => true // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Å—Ç–∞—Ç—É—Å
        });

        if (response.status === 200 || response.status === 400) {
            logSuccess('VK OAuth API –¥–æ—Å—Ç—É–ø–µ–Ω');
        } else {
            logWarning(`VK OAuth API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: ${response.status}`);
        }
    } catch (error) {
        logError(`VK OAuth API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
    }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º VK API –º–µ—Ç–æ–¥—ã
async function testVkAPI() {
    try {
        logInfo('–ü—Ä–æ–≤–µ—Ä—è–µ–º VK API –º–µ—Ç–æ–¥—ã...');
        const response = await axios.get('https://api.vk.com/method/wall.get', {
            params: {
                v: '5.199',
                access_token: 'invalid_token', // –ù–∞–º–µ—Ä–µ–Ω–Ω–æ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω
                owner_id: 1,
                count: 1
            },
            timeout: 10000
        });

        if (response.data && response.data.error && response.data.error.error_code === 5) {
            logSuccess('VK API –¥–æ—Å—Ç—É–ø–µ–Ω (–æ–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)');
        } else {
            logWarning('VK API –≤–µ—Ä–Ω—É–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç');
        }
    } catch (error) {
        logError(`VK API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É URLs
function validateUrls() {
    console.log('');
    console.log('üîó === –ü–†–û–í–ï–†–ö–ê URL –°–¢–†–£–ö–¢–£–†–´ ===');

    if (vkConfig.REDIRECT_URI) {
        try {
            const url = new URL(vkConfig.REDIRECT_URI);
            logSuccess(`Redirect URI –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${url.origin}${url.pathname}`);
            
            if (url.pathname.includes('/api/oauth/vk/callback')) {
                logSuccess('–ü—É—Ç—å redirect URI –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π');
            } else {
                logWarning('–ü—É—Ç—å redirect URI –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º');
            }
        } catch (error) {
            logError('Redirect URI –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
        }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–º–µ–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    const envDomain = process.env.APP_BASE_URL;
    if (envDomain && vkConfig.REDIRECT_URI) {
        try {
            const appUrl = new URL(envDomain);
            const redirectUrl = new URL(vkConfig.REDIRECT_URI);
            
            if (appUrl.origin === redirectUrl.origin) {
                logSuccess('–î–æ–º–µ–Ω—ã APP_BASE_URL –∏ VK_REDIRECT_URI —Å–æ–≤–ø–∞–¥–∞—é—Ç');
            } else {
                logWarning('–î–æ–º–µ–Ω—ã APP_BASE_URL –∏ VK_REDIRECT_URI –ù–ï —Å–æ–≤–ø–∞–¥–∞—é—Ç');
                logInfo(`APP_BASE_URL: ${appUrl.origin}`);
                logInfo(`VK_REDIRECT_URI: ${redirectUrl.origin}`);
            }
        } catch (error) {
            logWarning('–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å –¥–æ–º–µ–Ω—ã');
        }
    }
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ URLs
function generateTestUrls() {
    console.log('');
    console.log('üîß === –¢–ï–°–¢–û–í–´–ï URL –î–õ–Ø –ü–†–û–í–ï–†–ö–ò ===');

    if (vkConfig.CLIENT_ID && vkConfig.REDIRECT_URI) {
        const testAuthUrl = new URL('https://oauth.vk.com/authorize');
        testAuthUrl.searchParams.set('client_id', vkConfig.CLIENT_ID);
        testAuthUrl.searchParams.set('redirect_uri', vkConfig.REDIRECT_URI);
        testAuthUrl.searchParams.set('response_type', 'code');
        testAuthUrl.searchParams.set('v', '5.199');
        testAuthUrl.searchParams.set('scope', process.env.VK_OAUTH_SCOPE || 'email');
        testAuthUrl.searchParams.set('state', 'test_state_123');

        console.log('üîó –¢–µ—Å—Ç–æ–≤—ã–π URL –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK:');
        console.log(testAuthUrl.toString());
        console.log('');
        logInfo('–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç URL –≤ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ VK');
    } else {
        logError('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π URL - –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç CLIENT_ID –∏–ª–∏ REDIRECT_URI');
    }

    // URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const localTestUrl = `http://localhost:3001/auth/vk/login?tg_user_id=test_user_123`;
    console.log('üè† –õ–æ–∫–∞–ª—å–Ω—ã–π URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log(localTestUrl);
    logInfo('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º');
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
function generateRecommendations() {
    console.log('');
    console.log('üí° === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===');

    if (errors > 0) {
        console.log('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:');
        
        if (vkConfig.CLIENT_SECRET && vkConfig.CLIENT_SECRET.includes('REQUIRED')) {
            console.log('1. –ü–æ–ª—É—á–∏—Ç–µ VK_CLIENT_SECRET:');
            console.log('   - –ó–∞–π–¥–∏—Ç–µ –≤ VK Developers: https://dev.vk.com/');
            console.log('   - –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
            console.log('   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ "–ó–∞—â–∏—â—ë–Ω–Ω—ã–π –∫–ª—é—á"');
            console.log('   - –û–±–Ω–æ–≤–∏—Ç–µ VK_CLIENT_SECRET –≤ .env');
        }

        if (!vkConfig.JWT_SECRET || vkConfig.JWT_SECRET.length < 10) {
            console.log('2. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ JWT_SECRET:');
            console.log('   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node -e "console.log(require(\'crypto\').randomBytes(64).toString(\'hex\'))"');
            console.log('   - –ò–ª–∏ –ª—é–±–æ–π –¥–ª–∏–Ω–Ω—ã–π —Å–ª—É—á–∞–π–Ω—ã–π string');
        }
    }

    if (warnings > 0) {
        console.log('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:');
        
        if (vkConfig.SERVICE_KEY && vkConfig.SERVICE_KEY.includes('REQUIRED')) {
            console.log('1. VK_SERVICE_KEY –Ω—É–∂–µ–Ω –¥–ª—è VK ID API');
            console.log('   - –ü–æ–ª—É—á–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö VK –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
        }

        if (vkConfig.GROUP_ID && vkConfig.GROUP_ID.includes('ID_–°–û–û–ë–©–ï–°–¢–í–ê')) {
            console.log('2. VK_GROUP_ID –Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ');
            console.log('   - –£–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–π VK –≥—Ä—É–ø–ø—ã (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã)');
        }
    }

    console.log('');
    console.log('üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ .env');
    console.log('2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä');
    console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ VK –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
    console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ callback –æ–±—Ä–∞–±–æ—Ç–∫—É');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
async function runAllChecks() {
    validateUrls();
    await testVkOAuthAPI();
    await testVkAPI();
    generateTestUrls();
    generateRecommendations();

    console.log('');
    console.log('üìä === –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${Math.max(0, 10 - errors - warnings)}`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errors}`);
    console.log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${warnings}`);

    const total = errors + warnings;
    if (total === 0) {
        console.log('üéâ VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!');
    } else if (errors === 0) {
        console.log('‚ö†Ô∏è  VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —á–∞—Å—Ç–∏—á–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ (–µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è)');
    } else {
        console.log('‚ùå VK –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π');
    }
}

runAllChecks().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
});
